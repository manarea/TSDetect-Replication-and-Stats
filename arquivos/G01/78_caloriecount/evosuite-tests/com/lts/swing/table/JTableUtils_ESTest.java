/*
 * This file was automatically generated by EvoSuite
 * Thu May 07 08:52:50 GMT 2020
 */

package com.lts.swing.table;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.swing.table.JTableUtils;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import javax.swing.DropMode;
import javax.swing.JComboBox;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTree;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultEditorKit;
import javax.swing.tree.DefaultTreeCellEditor;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JTableUtils_ESTest extends JTableUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[][] objectArray0 = new Object[9][3];
      Object[] objectArray1 = new Object[9];
      Object object0 = new Object();
      objectArray1[0] = object0;
      objectArray1[1] = objectArray1[0];
      objectArray1[2] = object0;
      objectArray1[3] = objectArray1[1];
      objectArray1[4] = object0;
      objectArray1[5] = objectArray1[4];
      objectArray1[6] = objectArray1[0];
      objectArray1[7] = objectArray1[1];
      objectArray1[8] = objectArray1[3];
      JTable jTable0 = new JTable(objectArray0, objectArray1);
      double[] doubleArray0 = new double[5];
      doubleArray0[3] = (-3260.8473780375803);
      JTableUtils.setPreferredColumnPercents(jTable0, doubleArray0);
      assertFalse(jTable0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JTable jTable0 = new JTable();
      double[] doubleArray0 = new double[3];
      doubleArray0[2] = (-1759.2019285421009);
      JTableUtils.setPreferredColumnPercents(jTable0, doubleArray0);
      assertFalse(jTable0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[][] objectArray0 = new Object[3][1];
      Object[] objectArray1 = new Object[3];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray1);
      JTable jTable0 = new JTable(defaultTableModel0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 47;
      JTableUtils.setPreferredColumnPercents2(jTable0, doubleArray0);
      assertArrayEquals(new double[] {47.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 891);
      JTable jTable0 = new JTable(defaultTableModel0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-968);
      // Undeclared exception!
      try { 
        JTableUtils.setPreferredColumnPercents2(jTable0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2552, 2552);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
      // Undeclared exception!
      try { 
        JTableUtils.setSelectedRows(jTable0, (-3299), 2552);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // bitIndex < 0: -3299
         //
         verifyException("java.util.BitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JTable jTable0 = new JTable(1259, 10);
      JScrollPane jScrollPane0 = new JScrollPane(jTable0);
      JTableUtils.scrollToCell(jTable0, 1259, 0);
      assertFalse(jTable0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JTable jTable0 = new JTable();
      JTableUtils.setSelectedRows(jTable0, 1198, 1198);
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JTable jTable0 = new JTable(1259, 10);
      JTableUtils.setSelectedRow(jTable0, 329);
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        JTableUtils.setupComboBox(4738, (JTable) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JTable jTable0 = new JTable();
      // Undeclared exception!
      try { 
        JTableUtils.setupComboBox((-1416), jTable0, (String[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector<JViewport> vector0 = new Vector<JViewport>();
      // Undeclared exception!
      try { 
        JTableUtils.setupComboBox(543, (JTable) null, (List) vector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JTable jTable0 = new JTable();
      Stack<DropMode> stack0 = new Stack<DropMode>();
      // Undeclared exception!
      try { 
        JTableUtils.setupComboBox(1196, jTable0, (List) stack0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1196 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JTable jTable0 = new JTable();
      // Undeclared exception!
      try { 
        JTableUtils.setSelectedRow(jTable0, (-2680));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // bitIndex < 0: -2680
         //
         verifyException("java.util.BitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        JTableUtils.setPreferredColumnPercents2((JTable) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JTable jTable0 = new JTable();
      // Undeclared exception!
      try { 
        JTableUtils.setPreferredColumnPercents(jTable0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        JTableUtils.setColumnWidth((JTable) null, 0, (-1227));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Stack<DefaultTableCellRenderer> stack0 = new Stack<DefaultTableCellRenderer>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, stack0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
      // Undeclared exception!
      try { 
        JTableUtils.setColumnWidth(jTable0, (-1), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        JTableUtils.scrollToRow((JTable) null, (-2296));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        JTableUtils.scrollToCell((JTable) null, 2920, 2920);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        JTableUtils.getSelectedColumns((JTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        JTableUtils.centerColumn((-1266), (JTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JTable jTable0 = new JTable();
      // Undeclared exception!
      try { 
        JTableUtils.centerColumn(2237, jTable0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2237 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        JTableUtils.setSelectedRows((JTable) null, 1259, 1259);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JTable jTable0 = new JTable(253, 253);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 253;
      JTableUtils.setPreferredColumnPercents(jTable0, doubleArray0);
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JTable jTable0 = new JTable();
      double[] doubleArray0 = new double[4];
      doubleArray0[1] = (double) 1218;
      JTableUtils.setPreferredColumnPercents(jTable0, doubleArray0);
      assertFalse(jTable0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JTable jTable0 = new JTable();
      List list0 = JTableUtils.getSelectedColumns(jTable0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JTable jTable0 = new JTable(1259, 10);
      // Undeclared exception!
      try { 
        JTableUtils.getSelectedColumns(jTable0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JTable jTable0 = new JTable(171, 171);
      jTable0.changeSelection(171, 171, false, false);
      List list0 = JTableUtils.getSelectedColumns(jTable0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JTable jTable0 = new JTable(1259, 10);
      JScrollPane jScrollPane0 = new JScrollPane(jTable0);
      JTableUtils.scrollToCell(jTable0, 0, 0);
      assertFalse(jTable0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JTable jTable0 = new JTable();
      JTableUtils.scrollToCell(jTable0, (-1452), (-1452));
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JTable jTable0 = new JTable(187, 187);
      JTableUtils.centerColumn(9, jTable0);
      JTableUtils.centerColumn(9, jTable0);
      assertFalse(jTable0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JTree jTree0 = new JTree();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellEditor defaultTreeCellEditor0 = new DefaultTreeCellEditor(jTree0, defaultTreeCellRenderer0);
      JTableUtils.DoubleClickListener jTableUtils_DoubleClickListener0 = new JTableUtils.DoubleClickListener(defaultTreeCellEditor0);
      jTableUtils_DoubleClickListener0.doubleClick();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JTable jTable0 = new JTable(1259, 10);
      DefaultEditorKit.CutAction defaultEditorKit_CutAction0 = new DefaultEditorKit.CutAction();
      JTableUtils.DoubleClickListener jTableUtils_DoubleClickListener0 = new JTableUtils.DoubleClickListener(defaultEditorKit_CutAction0);
      jTableUtils_DoubleClickListener0.showPopup(jTable0, 4325, 651);
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JTable jTable0 = new JTable(1259, 10);
      JTableUtils.setColumnWidth(jTable0, 0, (-1429));
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        JTableUtils.setSelectedRow((JTable) null, 2724);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.swing.table.JTableUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JTable jTable0 = new JTable(1259, 10);
      String[] stringArray0 = new String[2];
      JComboBox jComboBox0 = JTableUtils.setupComboBox(0, jTable0, stringArray0);
      assertFalse(jComboBox0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JTable jTable0 = new JTable(1259, 10);
      Vector<DropMode> vector0 = new Vector<DropMode>();
      JComboBox jComboBox0 = JTableUtils.setupComboBox(1, jTable0, (List) vector0);
      assertFalse(jComboBox0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JTable jTable0 = new JTable();
      JTableUtils.scrollToRow(jTable0, 47);
      assertFalse(jTable0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JTable jTable0 = new JTable(1259, 10);
      DefaultEditorKit.CutAction defaultEditorKit_CutAction0 = new DefaultEditorKit.CutAction();
      JTableUtils.setupDoubleClick(jTable0, defaultEditorKit_CutAction0);
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JTableUtils jTableUtils0 = new JTableUtils();
  }
}
