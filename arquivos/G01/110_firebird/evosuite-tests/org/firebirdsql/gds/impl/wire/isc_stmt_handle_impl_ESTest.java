/*
 * This file was automatically generated by EvoSuite
 * Thu May 07 08:53:03 GMT 2020
 */

package org.firebirdsql.gds.impl.wire;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.gds.XSQLDA;
import org.firebirdsql.gds.impl.wire.isc_db_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.junit.runner.RunWith;

 
public class isc_stmt_handle_implTest { 

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.ensureCapacity(1970);
      isc_stmt_handle_impl0.ensureCapacity(1538);
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.ensureCapacity(5);
      assertEquals(0, isc_stmt_handle_impl0.size());
      
      byte[][] byteArray0 = new byte[7][5];
      isc_stmt_handle_impl0.addRow(byteArray0);
      int int0 = isc_stmt_handle_impl0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      boolean boolean0 = isc_stmt_handle_impl0.isAllRowsFetched();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      
      isc_stmt_handle_impl0.setUpdateCount(1);
      int int0 = isc_stmt_handle_impl0.getUpdateCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setUpdateCount((-1008));
      int int0 = isc_stmt_handle_impl0.getUpdateCount();
      assertEquals((-1008), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl0.getTransaction();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setStatementType(3882);
      int int0 = isc_stmt_handle_impl0.getStatementType();
      assertEquals(3882, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setSelectCount((-2286));
      int int0 = isc_stmt_handle_impl0.getSelectCount();
      assertEquals((-2286), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl0.setResp_object(21);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      isc_stmt_handle_impl0.getRsr_rdb();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl0.setResp_object((-486));
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      isc_stmt_handle_impl0.getRsr_rdb();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_db_handle_impl0.setResp_data_len(24);
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      isc_stmt_handle_impl0.getRsr_rdb();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_db_handle_impl0.setResp_blob_id(1332L);
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      isc_stmt_handle_impl0.getRsr_rdb();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl0.setResp_blob_id((-1L));
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      isc_stmt_handle_impl0.getRsr_rdb();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl0.setProtocol(1897);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      isc_stmt_handle_impl0.getRsr_rdb();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl0.setODSMinorVersion(25);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      isc_stmt_handle_impl0.getRsr_rdb();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl0.setODSMinorVersion((-1972));
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      isc_stmt_handle_impl0.getRsr_rdb();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl0.setODSMajorVersion((-2065));
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      isc_stmt_handle_impl0.getRsr_rdb();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl0.setDialect(3412);
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      isc_stmt_handle_impl0.getRsr_rdb();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl0.setDialect((-963));
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      isc_stmt_handle_impl0.getRsr_rdb();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setRsr_id(239);
      int int0 = isc_stmt_handle_impl0.getRsr_id();
      assertEquals(239, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setRsr_id((-831));
      int int0 = isc_stmt_handle_impl0.getRsr_id();
      assertEquals((-831), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.ensureCapacity(0);
      byte[][][] byteArray0 = isc_stmt_handle_impl0.getRows();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, byteArray0.length);
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setInsertCount(176);
      int int0 = isc_stmt_handle_impl0.getInsertCount();
      assertEquals(176, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setInsertCount((-201));
      int int0 = isc_stmt_handle_impl0.getInsertCount();
      assertEquals((-201), int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setDeleteCount(5020);
      int int0 = isc_stmt_handle_impl0.getDeleteCount();
      assertEquals(5020, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      // Undeclared exception!
      try { 
        isc_stmt_handle_impl0.ensureCapacity((-1420));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[][] byteArray0 = new byte[5][7];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-29);
      byteArray0[0] = byteArray1;
      isc_stmt_handle_impl.printRow(byteArray0);
      assertEquals(5, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[][] byteArray0 = new byte[3][1];
      byteArray0[0] = null;
      isc_stmt_handle_impl.printRow(byteArray0);
      assertEquals(3, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      isc_stmt_handle_impl.printRow((byte[][]) null);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      boolean boolean0 = isc_stmt_handle_impl0.isValid();
      assertFalse(boolean0);
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.ensureCapacity(1971);
      isc_stmt_handle_impl0.clearRows();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.size());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.clearRows();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.ensureCapacity(0);
      isc_stmt_handle_impl0.ensureCapacity(0);
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.ensureCapacity(0);
      isc_stmt_handle_impl0.ensureCapacity(1);
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.size());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.ensureCapacity(5);
      byte[][][] byteArray0 = isc_stmt_handle_impl0.getRows();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(5, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.notifyOpenResultSet();
      boolean boolean0 = isc_stmt_handle_impl0.hasOpenResultSet();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setDeleteCount((-2286));
      int int0 = isc_stmt_handle_impl0.getDeleteCount();
      assertEquals((-2286), int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getOutSqlda();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      boolean boolean0 = isc_stmt_handle_impl0.isSingletonResult();
      assertFalse(boolean0);
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      int int0 = isc_stmt_handle_impl0.getStatementType();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, int0);
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRows();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.hasOpenResultSet();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      int int0 = isc_stmt_handle_impl0.getUpdateCount();
      assertEquals(0, int0);
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setSelectCount(255);
      int int0 = isc_stmt_handle_impl0.getSelectCount();
      assertEquals(255, int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      
      isc_stmt_handle_impl0.setSingletonResult(true);
      boolean boolean0 = isc_stmt_handle_impl0.isSingletonResult();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.unregisterTransaction();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getInSqlda();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getTransaction();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      int int0 = isc_stmt_handle_impl0.getInsertCount();
      assertEquals(0, int0);
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      int int0 = isc_stmt_handle_impl0.size();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setStatementType((byte) (-60));
      int int0 = isc_stmt_handle_impl0.getStatementType();
      assertEquals((-60), int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA(0);
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      isc_stmt_handle_impl0.getOutSqlda();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      int int0 = isc_stmt_handle_impl0.getDeleteCount();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      // Undeclared exception!
      try { 
        isc_stmt_handle_impl0.addRow((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      boolean boolean0 = isc_stmt_handle_impl0.isAllRowsFetched();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      isc_stmt_handle_impl0.setInSqlda(xSQLDA0);
      isc_stmt_handle_impl0.getInSqlda();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      int int0 = isc_stmt_handle_impl0.getRsr_id();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      boolean boolean0 = isc_stmt_handle_impl0.isValid();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      int int0 = isc_stmt_handle_impl0.getSelectCount();
      assertEquals(0, int0);
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
  }
}
