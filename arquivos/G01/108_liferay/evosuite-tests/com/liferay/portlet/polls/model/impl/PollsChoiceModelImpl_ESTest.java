/*
 * This file was automatically generated by EvoSuite
 * Thu May 07 08:39:29 GMT 2020
 */

package com.liferay.portlet.polls.model.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.model.Contact;
import com.liferay.portal.model.ContactWrapper;
import com.liferay.portal.model.PortletItem;
import com.liferay.portal.model.PortletItemWrapper;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.polls.model.PollsChoice;
import com.liferay.portlet.polls.model.PollsChoiceSoap;
import com.liferay.portlet.polls.model.PollsChoiceWrapper;
import com.liferay.portlet.polls.model.impl.PollsChoiceImpl;
import com.liferay.portlet.polls.model.impl.PollsChoiceModelImpl;
import java.io.Serializable;
import java.lang.reflect.Proxy;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.data.time.Day;
import org.junit.runner.RunWith;

 
public class PollsChoiceModelImplTest { 

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      pollsChoiceImpl0.setPrimaryKey(2915L);
      pollsChoiceImpl0.equals(pollsChoiceImpl0);
      // Undeclared exception!
      try { 
        pollsChoiceImpl0.getDescriptionCurrentValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.util.LocalizationUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      pollsChoiceImpl0.setChoiceId((-817L));
      Map<String, Object> map0 = pollsChoiceImpl0.getModelAttributes();
      pollsChoiceImpl0.setModelAttributes(map0);
      long long0 = pollsChoiceImpl0.getOriginalQuestionId();
      assertEquals((-1L), pollsChoiceImpl0.getColumnBitmask());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      PollsChoiceWrapper pollsChoiceWrapper0 = new PollsChoiceWrapper(pollsChoiceImpl0);
      pollsChoiceWrapper0.setChoiceId(9223372036854775807L);
      pollsChoiceImpl0.compareTo((PollsChoice) pollsChoiceWrapper0);
      pollsChoiceImpl0.getPrimaryKeyObj();
      System.setCurrentTimeMillis(0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      pollsChoiceModelImpl0.setPrimaryKey((-65L));
      assertEquals((-65L), pollsChoiceModelImpl0.getPrimaryKey());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      Serializable serializable0 = pollsChoiceModelImpl0.getPrimaryKeyObj();
      pollsChoiceModelImpl0.setPrimaryKeyObj(serializable0);
      String string0 = "/w2_";
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      pollsChoiceModelImpl0.equals(locale0);
      Proxy proxy0 = (Proxy)pollsChoiceModelImpl0.toEscapedModel();
      assertNotNull(proxy0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PollsChoiceSoap[] pollsChoiceSoapArray0 = new PollsChoiceSoap[0];
      List<PollsChoice> list0 = PollsChoiceModelImpl.toModels(pollsChoiceSoapArray0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PollsChoiceSoap pollsChoiceSoap0 = new PollsChoiceSoap();
      PollsChoiceImpl pollsChoiceImpl0 = (PollsChoiceImpl)PollsChoiceModelImpl.toModel(pollsChoiceSoap0);
      String string0 = pollsChoiceImpl0.getUuid();
      assertEquals("", string0);
      assertEquals((-1L), pollsChoiceImpl0.getColumnBitmask());
      assertEquals(0L, pollsChoiceImpl0.getOriginalQuestionId());
      assertEquals("", pollsChoiceImpl0.getDescription());
      assertEquals(0L, pollsChoiceImpl0.getQuestionId());
      assertNotNull(string0);
      assertEquals(0L, pollsChoiceImpl0.getPrimaryKey());
      assertEquals("", pollsChoiceImpl0.getName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      long long0 = pollsChoiceModelImpl0.getQuestionId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      pollsChoiceImpl0.setQuestionId(4L);
      long long0 = pollsChoiceImpl0.getQuestionId();
      assertEquals((-1L), pollsChoiceImpl0.getColumnBitmask());
      assertEquals(4L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      pollsChoiceModelImpl0.setChoiceId(2369L);
      long long0 = pollsChoiceModelImpl0.getPrimaryKey();
      assertEquals(2369L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      String string0 = pollsChoiceModelImpl0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      Map<String, Object> map0 = pollsChoiceModelImpl0.getModelAttributes();
      pollsChoiceModelImpl0.setModelAttributes(map0);
      long long0 = pollsChoiceModelImpl0.getColumnBitmask();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      long long0 = pollsChoiceImpl0.getChoiceId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      PollsChoiceWrapper pollsChoiceWrapper0 = new PollsChoiceWrapper(pollsChoiceImpl0);
      pollsChoiceWrapper0.setChoiceId(9223372036854775807L);
      long long0 = pollsChoiceImpl0.getChoiceId();
      assertEquals(9223372036854775807L, long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PollsChoiceSoap pollsChoiceSoap0 = new PollsChoiceSoap();
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      // Undeclared exception!
      try { 
        pollsChoiceModelImpl0.setPrimaryKeyObj(pollsChoiceSoap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.liferay.portlet.polls.model.PollsChoiceSoap cannot be cast to java.lang.Long
         //
         verifyException("com.liferay.portlet.polls.model.impl.PollsChoiceModelImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      // Undeclared exception!
      try { 
        pollsChoiceImpl0.setModelAttributes((Map<String, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.polls.model.impl.PollsChoiceModelImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      ServiceContext serviceContext0 = new ServiceContext();
      // Undeclared exception!
      try { 
        pollsChoiceModelImpl0.setExpandoBridgeAttributes(serviceContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      HashMap<Locale, String> hashMap0 = new HashMap<Locale, String>();
      // Undeclared exception!
      try { 
        pollsChoiceModelImpl0.setDescriptionMap((Map<Locale, String>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.util.LocalizationUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      PollsChoiceWrapper pollsChoiceWrapper0 = new PollsChoiceWrapper((PollsChoice) null);
      // Undeclared exception!
      try { 
        pollsChoiceImpl0.equals(pollsChoiceWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.polls.model.PollsChoiceWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      Proxy proxy0 = (Proxy)pollsChoiceImpl0.toEscapedModel();
      // Undeclared exception!
      try { 
        pollsChoiceImpl0.compareTo((PollsChoice) proxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.util.HtmlUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      Locale locale0 = Locale.ITALIAN;
      pollsChoiceModelImpl0.setDescriptionMap((Map<Locale, String>) null, locale0);
      PollsChoiceModelImpl pollsChoiceModelImpl1 = new PollsChoiceModelImpl();
      assertTrue(PollsChoiceModelImpl.COLUMN_BITMASK_ENABLED);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      HashMap<Locale, String> hashMap0 = new HashMap<Locale, String>();
      Locale locale0 = Locale.KOREA;
      // Undeclared exception!
      try { 
        pollsChoiceModelImpl0.setDescriptionMap((Map<Locale, String>) hashMap0, locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.util.LocalizationUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      String string0 = "";
      Locale locale0 = Locale.FRANCE;
      Locale locale1 = locale0.stripExtensions();
      // Undeclared exception!
      try { 
        pollsChoiceImpl0.setDescription("", locale1, locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.util.LocalizationUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I/5");
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      String string0 = pollsChoiceModelImpl0.toXmlString();
      assertEquals("<model><model-name>com.liferay.portlet.polls.model.PollsChoice</model-name><column><column-name>uuid</column-name><column-value><![CDATA[]]></column-value></column><column><column-name>choiceId</column-name><column-value><![CDATA[0]]></column-value></column><column><column-name>questionId</column-name><column-value><![CDATA[0]]></column-value></column><column><column-name>name</column-name><column-value><![CDATA[]]></column-value></column><column><column-name>description</column-name><column-value><![CDATA[]]></column-value></column></model>", string0);
      
      pollsChoiceModelImpl0.setDescription("%q~c]0*I");
      pollsChoiceModelImpl0.getOriginalName();
      pollsChoiceModelImpl0.getDescription();
      assertEquals("%q~c]0*I", pollsChoiceModelImpl0.getDescription());
      
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      assertEquals(0L, pollsChoiceImpl0.getQuestionId());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      pollsChoiceImpl0.setName("BU/");
      pollsChoiceImpl0.getName();
      long long0 = pollsChoiceImpl0.getPrimaryKey();
      assertEquals((-1L), pollsChoiceImpl0.getColumnBitmask());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PollsChoiceSoap[] pollsChoiceSoapArray0 = new PollsChoiceSoap[2];
      pollsChoiceSoapArray0[1] = pollsChoiceSoapArray0[0];
      PollsChoiceModelImpl.toModels(pollsChoiceSoapArray0);
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      assertFalse(pollsChoiceModelImpl0.isNew());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<PollsChoice> linkedList0 = new LinkedList<PollsChoice>();
      PollsChoiceModelImpl.toModel((PollsChoiceSoap) null);
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      pollsChoiceModelImpl0.setName((String) null);
      // Undeclared exception!
      try { 
        pollsChoiceModelImpl0.getExpandoBridge();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      // Undeclared exception!
      try { 
        pollsChoiceImpl0.getDescription("~k");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.util.LocalizationUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      Locale locale0 = Locale.ITALIAN;
      // Undeclared exception!
      try { 
        pollsChoiceImpl0.getDescription(locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.util.LocalizationUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      PollsChoiceModelImpl.QUESTIONID_COLUMN_BITMASK = 4L;
      pollsChoiceModelImpl0.getModelClassName();
      Proxy proxy0 = (Proxy)pollsChoiceModelImpl0.toEscapedModel();
      assertNotNull(proxy0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      String string0 = pollsChoiceModelImpl0.toString();
      assertEquals("{uuid=, choiceId=0, questionId=0, name=, description=}", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      pollsChoiceImpl0.setName("uuid");
      pollsChoiceImpl0.toCacheModel();
      assertEquals("uuid", pollsChoiceImpl0.getName());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      pollsChoiceImpl0.setUuid("F5\"_A4o%Q=-YJ;Tm");
      pollsChoiceImpl0.toCacheModel();
      long long0 = pollsChoiceImpl0.getOriginalQuestionId();
      assertEquals("F5\"_A4o%Q=-YJ;Tm", pollsChoiceImpl0.getUuid());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      pollsChoiceModelImpl0.setDescriptionMap((Map<Locale, String>) null);
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      Day day0 = new Day();
      Date date0 = day0.getStart();
      PortletItem portletItem0 = mock(PortletItem.class, new ViolatedAssumptionAnswer());
      doReturn(1L).when(portletItem0).getClassNameId();
      doReturn(2L).when(portletItem0).getCompanyId();
      doReturn((Date) null).when(portletItem0).getCreateDate();
      doReturn(1L).when(portletItem0).getGroupId();
      doReturn(date0).when(portletItem0).getModifiedDate();
      doReturn(";f").when(portletItem0).getName();
      doReturn("create table PollsChoice (uuid_ VARCHAR(75) null,choiceId LONG not null primary key,questionId LONG,name VARCHAR(75) null,description STRING null)").when(portletItem0).getPortletId();
      doReturn(0L).when(portletItem0).getPortletItemId();
      doReturn(0L).when(portletItem0).getUserId();
      doReturn(";f").when(portletItem0).getUserName();
      PortletItemWrapper portletItemWrapper0 = new PortletItemWrapper(portletItem0);
      Map<String, Object> map0 = portletItemWrapper0.getModelAttributes();
      pollsChoiceImpl0.setModelAttributes(map0);
      int int0 = pollsChoiceModelImpl0.compareTo((PollsChoice) pollsChoiceImpl0);
      assertEquals((-1L), pollsChoiceImpl0.getColumnBitmask());
      assertEquals((-2), int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      PollsChoiceSoap pollsChoiceSoap0 = new PollsChoiceSoap();
      pollsChoiceSoap0.setQuestionId(2500L);
      PollsChoiceImpl pollsChoiceImpl1 = (PollsChoiceImpl)PollsChoiceModelImpl.toModel(pollsChoiceSoap0);
      assertNotNull(pollsChoiceImpl1);
      
      int int0 = pollsChoiceImpl0.compareTo(pollsChoiceImpl1);
      assertEquals((-1), int0);
      assertEquals(2500L, pollsChoiceImpl1.getQuestionId());
      assertEquals("", pollsChoiceImpl1.getDescription());
      assertEquals("", pollsChoiceImpl1.getName());
      assertEquals("", pollsChoiceImpl1.getUuid());
      assertEquals(0L, pollsChoiceImpl1.getChoiceId());
      assertEquals((-1L), pollsChoiceImpl1.getColumnBitmask());
      assertEquals(0L, pollsChoiceImpl1.getOriginalQuestionId());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      Proxy proxy0 = (Proxy)pollsChoiceImpl0.toEscapedModel();
      Proxy proxy1 = (Proxy)pollsChoiceImpl0.toEscapedModel();
      assertSame(proxy1, proxy0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      // Undeclared exception!
      try { 
        pollsChoiceImpl0.setDescription("when hour is 24, min sec and fracton must be 0", locale0, locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.util.LocalizationUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      PollsChoiceImpl pollsChoiceImpl0 = (PollsChoiceImpl)pollsChoiceModelImpl0.clone();
      assertEquals("", pollsChoiceImpl0.getName());
      assertEquals("", pollsChoiceImpl0.getDescription());
      assertEquals("", pollsChoiceImpl0.getUuid());
      assertEquals(0L, pollsChoiceImpl0.getChoiceId());
      assertEquals(0L, pollsChoiceImpl0.getQuestionId());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      Map<String, Object> map0 = pollsChoiceModelImpl0.getModelAttributes();
      pollsChoiceModelImpl0.setModelAttributes(map0);
      pollsChoiceModelImpl0.setQuestionId((-2296L));
      long long0 = pollsChoiceModelImpl0.getQuestionId();
      assertEquals((-2296L), long0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      pollsChoiceImpl0.equals((Object) null);
      Contact contact0 = mock(Contact.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(contact0).getAccountId();
      doReturn((String) null).when(contact0).getAimSn();
      doReturn((Date) null).when(contact0).getBirthday();
      doReturn(0L).when(contact0).getClassNameId();
      doReturn(0L).when(contact0).getClassPK();
      doReturn(0L).when(contact0).getCompanyId();
      doReturn(0L).when(contact0).getContactId();
      doReturn((Date) null).when(contact0).getCreateDate();
      doReturn((String) null).when(contact0).getEmailAddress();
      doReturn((String) null).when(contact0).getEmployeeNumber();
      doReturn((String) null).when(contact0).getEmployeeStatusId();
      doReturn((String) null).when(contact0).getFacebookSn();
      doReturn((String) null).when(contact0).getFirstName();
      doReturn((String) null).when(contact0).getHoursOfOperation();
      doReturn((String) null).when(contact0).getIcqSn();
      doReturn((String) null).when(contact0).getJabberSn();
      doReturn((String) null).when(contact0).getJobClass();
      doReturn((String) null).when(contact0).getJobTitle();
      doReturn((String) null).when(contact0).getLastName();
      doReturn(false).when(contact0).getMale();
      doReturn((String) null).when(contact0).getMiddleName();
      doReturn((Date) null).when(contact0).getModifiedDate();
      doReturn((String) null).when(contact0).getMsnSn();
      doReturn((String) null).when(contact0).getMySpaceSn();
      doReturn(0L).when(contact0).getParentContactId();
      doReturn(0).when(contact0).getPrefixId();
      doReturn((String) null).when(contact0).getSkypeSn();
      doReturn((String) null).when(contact0).getSmsSn();
      doReturn(0).when(contact0).getSuffixId();
      doReturn((String) null).when(contact0).getTwitterSn();
      doReturn(0L).when(contact0).getUserId();
      doReturn((String) null).when(contact0).getUserName();
      doReturn((String) null).when(contact0).getYmSn();
      ContactWrapper contactWrapper0 = new ContactWrapper(contact0);
      Map<String, Object> map0 = contactWrapper0.getModelAttributes();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "BU/");
      pollsChoiceImpl0.setModelAttributes(map0);
      pollsChoiceImpl0.setQuestionId(0L);
      assertEquals((-1L), pollsChoiceImpl0.getColumnBitmask());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      List<PollsChoice> list0 = PollsChoiceModelImpl.toModels((PollsChoiceSoap[]) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PollsChoiceSoap pollsChoiceSoap0 = new PollsChoiceSoap();
      PollsChoice pollsChoice0 = PollsChoiceModelImpl.toModel(pollsChoiceSoap0);
      PollsChoiceSoap pollsChoiceSoap1 = PollsChoiceSoap.toSoapModel(pollsChoice0);
      PollsChoice pollsChoice1 = PollsChoiceModelImpl.toModel(pollsChoiceSoap1);
      ((PollsChoiceModelImpl) pollsChoice1).setQuestionId(1179L);
      ((PollsChoiceModelImpl) pollsChoice1).compareTo(pollsChoice0);
      ((PollsChoiceModelImpl) pollsChoice1).clone();
      assertEquals(1179L, pollsChoice1.getQuestionId());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      String string0 = pollsChoiceModelImpl0.getDescriptionCurrentLanguageId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      Class<?> class0 = pollsChoiceImpl0.getModelClass();
      assertFalse(class0.isPrimitive());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      long long0 = pollsChoiceModelImpl0.getColumnBitmask();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      // Undeclared exception!
      try { 
        pollsChoiceImpl0.getDescription((Locale) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.util.LocalizationUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I/5");
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      pollsChoiceModelImpl0.getDescription();
      ServiceContext serviceContext0 = new ServiceContext();
      Locale locale0 = serviceContext0.getLocale();
      // Undeclared exception!
      try { 
        pollsChoiceModelImpl0.prepareLocalizedFieldsForImport(locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.util.LocalizationUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      // Undeclared exception!
      try { 
        pollsChoiceImpl0.getDescriptionMap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.util.LocalizationUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      pollsChoiceImpl0.getOriginalQuestionId();
      pollsChoiceImpl0.setDescription("liferaySessionFactory");
      pollsChoiceImpl0.toCacheModel();
      assertEquals("liferaySessionFactory", pollsChoiceImpl0.getDescription());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      Map<String, Object> map0 = pollsChoiceModelImpl0.getModelAttributes();
      pollsChoiceModelImpl0.setModelAttributes(map0);
      pollsChoiceModelImpl0.resetOriginalValues();
      pollsChoiceModelImpl0.setUuid("=<^&A");
      pollsChoiceModelImpl0.getUuid();
      assertEquals(0L, pollsChoiceModelImpl0.getColumnBitmask());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      // Undeclared exception!
      try { 
        pollsChoiceModelImpl0.setPrimaryKeyObj((Serializable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.polls.model.impl.PollsChoiceModelImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      pollsChoiceModelImpl0.setDescriptionCurrentLanguageId(" 67mk6%EUe");
      assertEquals(" 67mk6%EUe", pollsChoiceModelImpl0.getDescriptionCurrentLanguageId());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      PollsChoiceModelImpl pollsChoiceModelImpl0 = new PollsChoiceModelImpl();
      // Undeclared exception!
      try { 
        pollsChoiceModelImpl0.getDescription("$", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.util.LocalizationUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      String string0 = pollsChoiceImpl0.getOriginalUuid();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      PollsChoiceImpl pollsChoiceImpl0 = new PollsChoiceImpl();
      Locale locale0 = Locale.CHINA;
      // Undeclared exception!
      try { 
        pollsChoiceImpl0.setDescription("", locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.util.LocalizationUtil", e);
      }
  }
}
