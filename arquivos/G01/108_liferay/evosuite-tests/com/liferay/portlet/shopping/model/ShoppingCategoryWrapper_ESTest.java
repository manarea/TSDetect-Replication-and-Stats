/*
 * This file was automatically generated by EvoSuite
 * Thu May 07 07:52:54 GMT 2020
 */

package com.liferay.portlet.shopping.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.model.Address;
import com.liferay.portal.model.AddressWrapper;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.LayoutRevision;
import com.liferay.portal.model.LayoutRevisionWrapper;
import com.liferay.portal.model.PortletItem;
import com.liferay.portal.model.PortletItemWrapper;
import com.liferay.portal.model.Repository;
import com.liferay.portal.model.RepositoryWrapper;
import com.liferay.portal.model.Team;
import com.liferay.portal.model.TeamWrapper;
import com.liferay.portal.model.Website;
import com.liferay.portal.model.WebsiteWrapper;
import com.liferay.portal.model.WorkflowInstanceLink;
import com.liferay.portal.model.WorkflowInstanceLinkWrapper;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.shopping.model.ShoppingCategory;
import com.liferay.portlet.shopping.model.ShoppingCategoryWrapper;
import java.io.Serializable;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

 
public class ShoppingCategoryWrapperTest { 

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((-1L)).when(shoppingCategory0).getCategoryId();
      doReturn((-1257L)).when(shoppingCategory0).getCompanyId();
      doReturn((Date) null).when(shoppingCategory0).getCreateDate();
      doReturn("IJDh<QZ^op)P@R?:]|").when(shoppingCategory0).getDescription();
      doReturn((-1L)).when(shoppingCategory0).getGroupId();
      doReturn((Date) null, mockDate0).when(shoppingCategory0).getModifiedDate();
      doReturn("IJDh<QZ^op)P@R?:]|").when(shoppingCategory0).getName();
      doReturn((-1109L)).when(shoppingCategory0).getParentCategoryId();
      doReturn(0L).when(shoppingCategory0).getUserId();
      doReturn((String) null).when(shoppingCategory0).getUserName();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.getModifiedDate();
      Map<String, Object> map0 = shoppingCategoryWrapper0.getModelAttributes();
      shoppingCategoryWrapper0.setModelAttributes(map0);
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.setUserName("");
      assertFalse(shoppingCategoryWrapper0.isRoot());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.setUserId((-165L));
      assertFalse(shoppingCategoryWrapper0.isRoot());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.setParentCategoryId(0L);
      assertFalse(shoppingCategoryWrapper0.isRoot());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.setName("S]o%!.~C9:DK xHtyJ");
      assertFalse(shoppingCategoryWrapper0.isRoot());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.setModifiedDate((Date) null);
      assertFalse(shoppingCategoryWrapper0.isRoot());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.setGroupId(0L);
      assertFalse(shoppingCategoryWrapper0.isRoot());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.setCompanyId(1L);
      assertFalse(shoppingCategoryWrapper0.isRoot());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.setUserUuid("[&7*Oh:!6lur[");
      assertFalse(shoppingCategoryWrapper0.isRoot());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.setPrimaryKey(0L);
      assertFalse(shoppingCategoryWrapper0.isRoot());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.setNew(false);
      assertFalse(shoppingCategoryWrapper0.isRoot());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      ServiceContext serviceContext0 = new ServiceContext();
      shoppingCategoryWrapper0.setExpandoBridgeAttributes(serviceContext0);
      assertFalse(serviceContext0.isSignedIn());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.setCachedModel(true);
      assertFalse(shoppingCategoryWrapper0.isRoot());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.resetOriginalValues();
      assertFalse(shoppingCategoryWrapper0.isRoot());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.persist();
      assertFalse(shoppingCategoryWrapper0.isRoot());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(shoppingCategory0).toXmlString();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.toXmlString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn("o@;").when(shoppingCategory0).toXmlString();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.toXmlString();
      assertEquals("o@;", string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn("").when(shoppingCategory0).toXmlString();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.toXmlString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      ShoppingCategory shoppingCategory1 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(shoppingCategoryWrapper0).when(shoppingCategory1).toEscapedModel();
      ShoppingCategoryWrapper shoppingCategoryWrapper1 = new ShoppingCategoryWrapper(shoppingCategory1);
      ShoppingCategory shoppingCategory2 = shoppingCategoryWrapper1.toEscapedModel();
      assertFalse(shoppingCategory2.equals((Object)shoppingCategoryWrapper0));
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((CacheModel) null).when(shoppingCategory0).toCacheModel();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      CacheModel<ShoppingCategory> cacheModel0 = shoppingCategoryWrapper0.toCacheModel();
      assertNull(cacheModel0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CacheModel<ShoppingCategory> cacheModel0 = (CacheModel<ShoppingCategory>) mock(CacheModel.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(cacheModel0).toString();
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(cacheModel0).when(shoppingCategory0).toCacheModel();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      CacheModel<ShoppingCategory> cacheModel1 = shoppingCategoryWrapper0.toCacheModel();
      assertSame(cacheModel1, cacheModel0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(shoppingCategory0).isRoot();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      boolean boolean0 = shoppingCategoryWrapper0.isRoot();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(shoppingCategory0).isNew();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      boolean boolean0 = shoppingCategoryWrapper0.isNew();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(shoppingCategory0).isEscapedModel();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      boolean boolean0 = shoppingCategoryWrapper0.isEscapedModel();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(shoppingCategory0).isCachedModel();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      boolean boolean0 = shoppingCategoryWrapper0.isCachedModel();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(shoppingCategory0).isCachedModel();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      boolean boolean0 = shoppingCategoryWrapper0.isCachedModel();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      ShoppingCategory shoppingCategory0 = shoppingCategoryWrapper0.getWrappedShoppingCategory();
      assertNull(shoppingCategory0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Address address0 = mock(Address.class, new ViolatedAssumptionAnswer());
      doReturn((Date) null).when(address0).getModifiedDate();
      AddressWrapper addressWrapper0 = new AddressWrapper(address0);
      addressWrapper0.getModifiedDate();
      PortletItem portletItem0 = mock(PortletItem.class, new ViolatedAssumptionAnswer());
      doReturn((Date) null).when(portletItem0).getModifiedDate();
      PortletItemWrapper portletItemWrapper0 = new PortletItemWrapper(portletItem0);
      portletItemWrapper0.getModifiedDate();
      Team team0 = mock(Team.class, new ViolatedAssumptionAnswer());
      doReturn((Date) null).when(team0).getModifiedDate();
      TeamWrapper teamWrapper0 = new TeamWrapper(team0);
      teamWrapper0.getModifiedDate();
      Repository repository0 = mock(Repository.class, new ViolatedAssumptionAnswer());
      doReturn((ExpandoBridge) null).when(repository0).getExpandoBridge();
      RepositoryWrapper repositoryWrapper0 = new RepositoryWrapper(repository0);
      repositoryWrapper0.getExpandoBridge();
      WorkflowInstanceLink workflowInstanceLink0 = mock(WorkflowInstanceLink.class, new ViolatedAssumptionAnswer());
      doReturn((ExpandoBridge) null).when(workflowInstanceLink0).getExpandoBridge();
      WorkflowInstanceLinkWrapper workflowInstanceLinkWrapper0 = new WorkflowInstanceLinkWrapper(workflowInstanceLink0);
      workflowInstanceLinkWrapper0.getExpandoBridge();
      Website website0 = mock(Website.class, new ViolatedAssumptionAnswer());
      doReturn((ExpandoBridge) null).when(website0).getExpandoBridge();
      WebsiteWrapper websiteWrapper0 = new WebsiteWrapper(website0);
      websiteWrapper0.getExpandoBridge();
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      ShoppingCategory shoppingCategory1 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((Date) null).when(shoppingCategory1).getCreateDate();
      doReturn(3968L).when(shoppingCategory1).getGroupId();
      doReturn((Date) null).when(shoppingCategory1).getModifiedDate();
      doReturn(shoppingCategoryWrapper0).when(shoppingCategory1).toEscapedModel();
      ShoppingCategoryWrapper shoppingCategoryWrapper1 = new ShoppingCategoryWrapper(shoppingCategory1);
      ShoppingCategoryWrapper shoppingCategoryWrapper2 = (ShoppingCategoryWrapper)shoppingCategoryWrapper1.toEscapedModel();
      shoppingCategoryWrapper1.getModifiedDate();
      shoppingCategoryWrapper1.getCreateDate();
      shoppingCategoryWrapper1.getGroupId();
      System.setCurrentTimeMillis(3968L);
      shoppingCategoryWrapper2.getWrappedShoppingCategory();
      System.setCurrentTimeMillis(0L);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      ShoppingCategory shoppingCategory0 = shoppingCategoryWrapper0.getWrappedModel();
      assertNull(shoppingCategory0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      ShoppingCategoryWrapper shoppingCategoryWrapper1 = new ShoppingCategoryWrapper(shoppingCategoryWrapper0);
      ShoppingCategory shoppingCategory1 = shoppingCategoryWrapper1.getWrappedModel();
      assertSame(shoppingCategoryWrapper0, shoppingCategory1);
      assertNotSame(shoppingCategoryWrapper1, shoppingCategory1);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn("n):J_a@-.n_t>a<%m").when(shoppingCategory0).getUserUuid();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.getUserUuid();
      assertEquals("n):J_a@-.n_t>a<%m", string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn("").when(shoppingCategory0).getUserUuid();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.getUserUuid();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(shoppingCategory0).getUserName();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.getUserName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn("'sAomq[").when(shoppingCategory0).getUserName();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.getUserName();
      assertEquals("'sAomq[", string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn("").when(shoppingCategory0).getUserName();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.getUserName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(shoppingCategory0).getUserId();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      long long0 = shoppingCategoryWrapper0.getUserId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(1773L).when(shoppingCategory0).getUserId();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      long long0 = shoppingCategoryWrapper0.getUserId();
      assertEquals(1773L, long0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((-844L)).when(shoppingCategory0).getUserId();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      long long0 = shoppingCategoryWrapper0.getUserId();
      assertEquals((-844L), long0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((Date) null).when(shoppingCategory0).getPrimaryKeyObj();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      Serializable serializable0 = shoppingCategoryWrapper0.getPrimaryKeyObj();
      assertNull(serializable0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      MockDate mockDate0 = new MockDate(598, 598, (-2824), (-1145), 1);
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(mockDate0).when(shoppingCategory0).getPrimaryKeyObj();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      Serializable serializable0 = shoppingCategoryWrapper0.getPrimaryKeyObj();
      assertSame(mockDate0, serializable0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(shoppingCategory0).getPrimaryKey();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      long long0 = shoppingCategoryWrapper0.getPrimaryKey();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(2410L).when(shoppingCategory0).getPrimaryKey();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      long long0 = shoppingCategoryWrapper0.getPrimaryKey();
      assertEquals(2410L, long0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(shoppingCategory0).getParentCategoryId();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      long long0 = shoppingCategoryWrapper0.getParentCategoryId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(5325L).when(shoppingCategory0).getParentCategoryId();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      long long0 = shoppingCategoryWrapper0.getParentCategoryId();
      assertEquals(5325L, long0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3182L));
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((-157L)).when(shoppingCategory0).getCategoryId();
      doReturn(0L).when(shoppingCategory0).getCompanyId();
      doReturn(mockDate0).when(shoppingCategory0).getCreateDate();
      doReturn("z4g#+B\"y/is'").when(shoppingCategory0).getDescription();
      doReturn(1457L).when(shoppingCategory0).getGroupId();
      doReturn(mockDate0).when(shoppingCategory0).getModifiedDate();
      doReturn("z4g#+B\"y/is'").when(shoppingCategory0).getName();
      doReturn(1457L, (-1L)).when(shoppingCategory0).getParentCategoryId();
      doReturn(0L).when(shoppingCategory0).getUserId();
      doReturn("z4g#+B\"y/is'").when(shoppingCategory0).getUserName();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.getModelAttributes();
      long long0 = shoppingCategoryWrapper0.getParentCategoryId();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn("layouttpl").when(shoppingCategory0).getName();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.getName();
      assertEquals("layouttpl", string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn("").when(shoppingCategory0).getName();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-941), 279, 0, 279, 0, 1800);
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(mockDate0).when(shoppingCategory0).getModifiedDate();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      Date date0 = shoppingCategoryWrapper0.getModifiedDate();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(shoppingCategory0).getGroupId();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      long long0 = shoppingCategoryWrapper0.getGroupId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((-3334L)).when(shoppingCategory0).getGroupId();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      long long0 = shoppingCategoryWrapper0.getGroupId();
      assertEquals((-3334L), long0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(shoppingCategory0).getDescription();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn("modifiedDate").when(shoppingCategory0).getDescription();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.getDescription();
      assertEquals("modifiedDate", string0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn("").when(shoppingCategory0).getDescription();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      MockDate mockDate0 = new MockDate(598, 598, (-2824), (-1145), 1);
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(mockDate0).when(shoppingCategory0).getCreateDate();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      Date date0 = shoppingCategoryWrapper0.getCreateDate();
      assertEquals("Sun Dec 20 07:01:00 GMT 2539", date0.toString());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(shoppingCategory0).getCompanyId();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      long long0 = shoppingCategoryWrapper0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(2410L).when(shoppingCategory0).getCompanyId();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      long long0 = shoppingCategoryWrapper0.getCompanyId();
      assertEquals(2410L, long0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((-1L)).when(shoppingCategory0).getCompanyId();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      long long0 = shoppingCategoryWrapper0.getCompanyId();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(1038L).when(shoppingCategory0).getCategoryId();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      long long0 = shoppingCategoryWrapper0.getCategoryId();
      assertEquals(1038L, long0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((-1L)).when(shoppingCategory0).getCategoryId();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      long long0 = shoppingCategoryWrapper0.getCategoryId();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(shoppingCategory0).compareTo(any(com.liferay.portlet.shopping.model.ShoppingCategory.class));
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      int int0 = shoppingCategoryWrapper0.compareTo((ShoppingCategory) shoppingCategoryWrapper0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(341).when(shoppingCategory0).compareTo(any(com.liferay.portlet.shopping.model.ShoppingCategory.class));
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      int int0 = shoppingCategoryWrapper0.compareTo((ShoppingCategory) shoppingCategoryWrapper0);
      assertEquals(341, int0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((-1605)).when(shoppingCategory0).compareTo(any(com.liferay.portlet.shopping.model.ShoppingCategory.class));
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      int int0 = shoppingCategoryWrapper0.compareTo((ShoppingCategory) shoppingCategoryWrapper0);
      assertEquals((-1605), int0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setPrimaryKeyObj((Serializable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setModelAttributes((Map<String, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("name", shoppingCategoryWrapper0);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setModelAttributes(hashMap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.liferay.portlet.shopping.model.ShoppingCategoryWrapper cannot be cast to java.lang.String
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setDescription("(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setCreateDate((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setCategoryId(1L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.isRoot();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.isNew();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.isEscapedModel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.getUserUuid();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.getPrimaryKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.getModelAttributes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.getExpandoBridge();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.getCategoryId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.getParentCategoryId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.getModifiedDate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setGroupId(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.getCompanyId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setUserId(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setName("Zl//eUEefUk{Rl");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.getCreateDate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.getUserName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setUserName("5bAFN`4vJ^hS/qI^gKe");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.getDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setModifiedDate((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setCompanyId(2236L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setParentCategoryId(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.getUserId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.setDescription("");
      assertFalse(shoppingCategoryWrapper0.isRoot());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.setCreateDate((Date) null);
      assertFalse(shoppingCategoryWrapper0.isRoot());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.getGroupId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      shoppingCategoryWrapper0.setCategoryId(0L);
      assertFalse(shoppingCategoryWrapper0.isRoot());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(shoppingCategory0).getCategoryId();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      long long0 = shoppingCategoryWrapper0.getCategoryId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(shoppingCategory0).getName();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      shoppingCategoryWrapper0.setModelAttributes(hashMap0);
      assertEquals(0, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Repository repository0 = mock(Repository.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(repository0).getTypeSettings();
      doReturn(0L).when(repository0).getClassNameId();
      doReturn(0L).when(repository0).getCompanyId();
      doReturn((Date) null).when(repository0).getCreateDate();
      doReturn((String) null).when(repository0).getDescription();
      doReturn(0L).when(repository0).getDlFolderId();
      doReturn(0L).when(repository0).getGroupId();
      doReturn((Date) null).when(repository0).getModifiedDate();
      doReturn((String) null).when(repository0).getName();
      doReturn((String) null).when(repository0).getPortletId();
      doReturn(0L).when(repository0).getRepositoryId();
      doReturn(0L).when(repository0).getUserId();
      doReturn((String) null).when(repository0).getUserName();
      doReturn((String) null).when(repository0).getUuid();
      RepositoryWrapper repositoryWrapper0 = new RepositoryWrapper(repository0);
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      Map<String, Object> map0 = repositoryWrapper0.getModelAttributes();
      shoppingCategoryWrapper0.setModelAttributes(map0);
      assertEquals(14, map0.size());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((ExpandoBridge) null).when(shoppingCategory0).getExpandoBridge();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      ExpandoBridge expandoBridge0 = shoppingCategoryWrapper0.getExpandoBridge();
      assertNull(expandoBridge0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.persist();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      LayoutRevision layoutRevision0 = mock(LayoutRevision.class, new ViolatedAssumptionAnswer());
      LayoutRevisionWrapper layoutRevisionWrapper0 = new LayoutRevisionWrapper(layoutRevision0);
      shoppingCategoryWrapper0.setPrimaryKeyObj(layoutRevisionWrapper0);
      assertFalse(layoutRevisionWrapper0.isInheritWapLookAndFeel());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setCachedModel(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setUserUuid("w\"w-8/ &g:`E'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.toXmlString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      Object object0 = shoppingCategoryWrapper0.clone();
      assertNotSame(shoppingCategoryWrapper0, object0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      shoppingCategoryWrapper0.hashCode();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(shoppingCategory0).isEscapedModel();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      boolean boolean0 = shoppingCategoryWrapper0.isEscapedModel();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setPrimaryKey((-179L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(shoppingCategory0).getUserUuid();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.getUserUuid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.compareTo((ShoppingCategory) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      ServiceContext serviceContext0 = new ServiceContext();
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setExpandoBridgeAttributes(serviceContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn((-1L)).when(shoppingCategory0).getPrimaryKey();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      long long0 = shoppingCategoryWrapper0.getPrimaryKey();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      String string0 = shoppingCategoryWrapper0.getModelClassName();
      assertEquals("com.liferay.portlet.shopping.model.ShoppingCategory", string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.toEscapedModel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.resetOriginalValues();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.setNew(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.getPrimaryKeyObj();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(shoppingCategory0).isRoot();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      boolean boolean0 = shoppingCategoryWrapper0.isRoot();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.isCachedModel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper((ShoppingCategory) null);
      // Undeclared exception!
      try { 
        shoppingCategoryWrapper0.toCacheModel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.shopping.model.ShoppingCategoryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      MockDate mockDate0 = new MockDate(3779L);
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(1284L).when(shoppingCategory0).getCategoryId();
      doReturn(3779L).when(shoppingCategory0).getCompanyId();
      doReturn(mockDate0).when(shoppingCategory0).getCreateDate();
      doReturn(":j_X").when(shoppingCategory0).getDescription();
      doReturn(3779L).when(shoppingCategory0).getGroupId();
      doReturn(mockDate0).when(shoppingCategory0).getModifiedDate();
      doReturn(":j_X").when(shoppingCategory0).getName();
      doReturn(3779L).when(shoppingCategory0).getParentCategoryId();
      doReturn(1284L).when(shoppingCategory0).getUserId();
      doReturn(":j_X").when(shoppingCategory0).getUserName();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      Map<String, Object> map0 = shoppingCategoryWrapper0.getModelAttributes();
      shoppingCategoryWrapper0.setModelAttributes(map0);
      assertEquals(10, map0.size());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(shoppingCategory0).isNew();
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      boolean boolean0 = shoppingCategoryWrapper0.isNew();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ShoppingCategory shoppingCategory0 = mock(ShoppingCategory.class, new ViolatedAssumptionAnswer());
      ShoppingCategoryWrapper shoppingCategoryWrapper0 = new ShoppingCategoryWrapper(shoppingCategory0);
      Class<?> class0 = shoppingCategoryWrapper0.getModelClass();
      assertEquals("interface com.liferay.portlet.shopping.model.ShoppingCategory", class0.toString());
  }
}
