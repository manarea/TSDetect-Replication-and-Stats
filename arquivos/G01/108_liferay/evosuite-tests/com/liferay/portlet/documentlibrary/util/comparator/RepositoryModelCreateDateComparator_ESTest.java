/*
 * This file was automatically generated by EvoSuite
 * Thu May 07 08:37:54 GMT 2020
 */

package com.liferay.portlet.documentlibrary.util.comparator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.repository.model.FileEntry;
import com.liferay.portal.repository.proxy.FileEntryProxyBean;
import com.liferay.portlet.documentlibrary.model.DLFileEntry;
import com.liferay.portlet.documentlibrary.model.DLFileEntryWrapper;
import com.liferay.portlet.documentlibrary.model.DLFileShortcut;
import com.liferay.portlet.documentlibrary.model.DLFileShortcutWrapper;
import com.liferay.portlet.documentlibrary.model.DLFolder;
import com.liferay.portlet.documentlibrary.model.DLFolderWrapper;
import com.liferay.portlet.documentlibrary.util.comparator.RepositoryModelCreateDateComparator;
import java.util.Date;
import java.util.function.ToIntFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RepositoryModelCreateDateComparator_ESTest extends RepositoryModelCreateDateComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RepositoryModelCreateDateComparator repositoryModelCreateDateComparator0 = new RepositoryModelCreateDateComparator();
      // Undeclared exception!
      try { 
        repositoryModelCreateDateComparator0.compare((Object) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.documentlibrary.util.comparator.RepositoryModelCreateDateComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RepositoryModelCreateDateComparator repositoryModelCreateDateComparator0 = new RepositoryModelCreateDateComparator(true);
      boolean boolean0 = repositoryModelCreateDateComparator0.isAscending();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RepositoryModelCreateDateComparator repositoryModelCreateDateComparator0 = new RepositoryModelCreateDateComparator();
      DLFileShortcut dLFileShortcut0 = mock(DLFileShortcut.class, new ViolatedAssumptionAnswer());
      doReturn((Date) null).when(dLFileShortcut0).getCreateDate();
      DLFileShortcutWrapper dLFileShortcutWrapper0 = new DLFileShortcutWrapper(dLFileShortcut0);
      repositoryModelCreateDateComparator0.getCreateDate(dLFileShortcutWrapper0);
      assertFalse(repositoryModelCreateDateComparator0.isAscending());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RepositoryModelCreateDateComparator repositoryModelCreateDateComparator0 = new RepositoryModelCreateDateComparator();
      MockDate mockDate0 = new MockDate(525, 1007, 1007, 467, 525);
      DLFileShortcut dLFileShortcut0 = mock(DLFileShortcut.class, new ViolatedAssumptionAnswer());
      doReturn(mockDate0).when(dLFileShortcut0).getCreateDate();
      DLFileShortcutWrapper dLFileShortcutWrapper0 = new DLFileShortcutWrapper(dLFileShortcut0);
      repositoryModelCreateDateComparator0.getCreateDate(dLFileShortcutWrapper0);
      assertFalse(repositoryModelCreateDateComparator0.isAscending());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockDate mockDate0 = new MockDate(525, 1007, 1007, 467, 525);
      DLFileShortcut dLFileShortcut0 = mock(DLFileShortcut.class, new ViolatedAssumptionAnswer());
      doReturn(mockDate0).when(dLFileShortcut0).getCreateDate();
      DLFileShortcutWrapper dLFileShortcutWrapper0 = new DLFileShortcutWrapper(dLFileShortcut0);
      RepositoryModelCreateDateComparator repositoryModelCreateDateComparator0 = new RepositoryModelCreateDateComparator(true);
      FileEntry fileEntry0 = mock(FileEntry.class, new ViolatedAssumptionAnswer());
      doReturn((Date) null).when(fileEntry0).getCreateDate();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      FileEntryProxyBean fileEntryProxyBean0 = new FileEntryProxyBean(fileEntry0, classLoader0);
      int int0 = repositoryModelCreateDateComparator0.compare(dLFileShortcutWrapper0, fileEntryProxyBean0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RepositoryModelCreateDateComparator repositoryModelCreateDateComparator0 = new RepositoryModelCreateDateComparator();
      // Undeclared exception!
      try { 
        repositoryModelCreateDateComparator0.getCreateDate("createDate DESC");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.liferay.portal.kernel.repository.model.Folder
         //
         verifyException("com.liferay.portlet.documentlibrary.util.comparator.RepositoryModelCreateDateComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RepositoryModelCreateDateComparator repositoryModelCreateDateComparator0 = new RepositoryModelCreateDateComparator();
      ToIntFunction<DLFolderWrapper> toIntFunction0 = (ToIntFunction<DLFolderWrapper>) mock(ToIntFunction.class, new ViolatedAssumptionAnswer());
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        repositoryModelCreateDateComparator0.compare(object0, toIntFunction0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to com.liferay.portal.kernel.repository.model.Folder
         //
         verifyException("com.liferay.portlet.documentlibrary.util.comparator.RepositoryModelCreateDateComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RepositoryModelCreateDateComparator repositoryModelCreateDateComparator0 = new RepositoryModelCreateDateComparator(true);
      DLFileShortcut dLFileShortcut0 = mock(DLFileShortcut.class, new ViolatedAssumptionAnswer());
      DLFileShortcutWrapper dLFileShortcutWrapper0 = new DLFileShortcutWrapper(dLFileShortcut0);
      DLFolderWrapper dLFolderWrapper0 = new DLFolderWrapper((DLFolder) null);
      // Undeclared exception!
      try { 
        repositoryModelCreateDateComparator0.compare(dLFolderWrapper0, dLFileShortcutWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.documentlibrary.model.DLFolderWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RepositoryModelCreateDateComparator repositoryModelCreateDateComparator0 = new RepositoryModelCreateDateComparator();
      MockDate mockDate0 = new MockDate((-504), (-504), 198);
      DLFileShortcut dLFileShortcut0 = mock(DLFileShortcut.class, new ViolatedAssumptionAnswer());
      doReturn(mockDate0).when(dLFileShortcut0).getCreateDate();
      DLFileShortcutWrapper dLFileShortcutWrapper0 = new DLFileShortcutWrapper(dLFileShortcut0);
      FileEntry fileEntry0 = mock(FileEntry.class, new ViolatedAssumptionAnswer());
      doReturn((Date) null).when(fileEntry0).getCreateDate();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      FileEntryProxyBean fileEntryProxyBean0 = new FileEntryProxyBean(fileEntry0, classLoader0);
      int int0 = repositoryModelCreateDateComparator0.compare(dLFileShortcutWrapper0, fileEntryProxyBean0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RepositoryModelCreateDateComparator repositoryModelCreateDateComparator0 = new RepositoryModelCreateDateComparator();
      DLFileEntryWrapper dLFileEntryWrapper0 = new DLFileEntryWrapper((DLFileEntry) null);
      // Undeclared exception!
      try { 
        repositoryModelCreateDateComparator0.getCreateDate(dLFileEntryWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.documentlibrary.model.DLFileEntryWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RepositoryModelCreateDateComparator repositoryModelCreateDateComparator0 = new RepositoryModelCreateDateComparator(true);
      String string0 = repositoryModelCreateDateComparator0.getOrderBy();
      assertEquals("createDate ASC", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RepositoryModelCreateDateComparator repositoryModelCreateDateComparator0 = new RepositoryModelCreateDateComparator();
      String string0 = repositoryModelCreateDateComparator0.getOrderBy();
      assertEquals("createDate DESC", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RepositoryModelCreateDateComparator repositoryModelCreateDateComparator0 = new RepositoryModelCreateDateComparator(true);
      DLFileShortcut dLFileShortcut0 = mock(DLFileShortcut.class, new ViolatedAssumptionAnswer());
      doReturn((Date) null, (Date) null).when(dLFileShortcut0).getCreateDate();
      DLFileShortcutWrapper dLFileShortcutWrapper0 = new DLFileShortcutWrapper(dLFileShortcut0);
      int int0 = repositoryModelCreateDateComparator0.compare(dLFileShortcutWrapper0, dLFileShortcutWrapper0);
      assertEquals(0, int0);
      assertEquals("createDate ASC", repositoryModelCreateDateComparator0.getOrderBy());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RepositoryModelCreateDateComparator repositoryModelCreateDateComparator0 = new RepositoryModelCreateDateComparator();
      repositoryModelCreateDateComparator0.getOrderByFields();
      assertEquals("createDate DESC", repositoryModelCreateDateComparator0.getOrderBy());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RepositoryModelCreateDateComparator repositoryModelCreateDateComparator0 = new RepositoryModelCreateDateComparator();
      boolean boolean0 = repositoryModelCreateDateComparator0.isAscending();
      assertFalse(boolean0);
  }
}
