/*
 * This file was automatically generated by EvoSuite
 * Thu May 07 08:44:17 GMT 2020
 */

package com.liferay.portlet.documentlibrary.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.lar.PortletDataContext;
import com.liferay.portal.kernel.repository.model.FileEntry;
import com.liferay.portal.kernel.repository.model.FileVersion;
import com.liferay.portal.kernel.util.FileUtil;
import com.liferay.portal.kernel.xml.Element;
import com.liferay.portal.repository.liferayrepository.model.LiferayFileVersion;
import com.liferay.portal.repository.proxy.FileEntryProxyBean;
import com.liferay.portal.repository.proxy.FileVersionProxyBean;
import com.liferay.portal.util.FileImpl;
import com.liferay.portal.xml.ElementImpl;
import com.liferay.portlet.documentlibrary.model.DLFileEntry;
import com.liferay.portlet.documentlibrary.model.DLFileVersion;
import com.liferay.portlet.documentlibrary.model.DLFileVersionWrapper;
import com.liferay.portlet.documentlibrary.util.DLPreviewableProcessor;
import com.liferay.portlet.documentlibrary.util.PDFProcessorImpl;
import groovy.lang.GroovyClassLoader;
import groovy.lang.GroovyShell;
import groovy.swing.SwingBuilder;
import java.util.List;
import org.codehaus.groovy.control.CompilerConfiguration;
import org.codehaus.groovy.runtime.IteratorClosureAdapter;
import org.dom4j.Namespace;
import org.dom4j.dom.DOMElement;
import org.dom4j.util.NonLazyElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

 
public class PDFProcessorImplTest { 

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      DLFileVersion dLFileVersion0 = mock(DLFileVersion.class, new ViolatedAssumptionAnswer());
      doReturn(0L, 0L, 0L).when(dLFileVersion0).getFileVersionId();
      DLFileVersionWrapper dLFileVersionWrapper0 = new DLFileVersionWrapper(dLFileVersion0);
      LiferayFileVersion liferayFileVersion0 = new LiferayFileVersion(dLFileVersionWrapper0, false);
      LiferayFileVersion liferayFileVersion1 = new LiferayFileVersion(dLFileVersionWrapper0);
      pDFProcessorImpl0.generateImages(liferayFileVersion1, liferayFileVersion0);
      assertEquals(1, DLPreviewableProcessor.THUMBNAIL_INDEX_CUSTOM_1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      DLFileVersion dLFileVersion0 = mock(DLFileVersion.class, new ViolatedAssumptionAnswer());
      doReturn((DLFileEntry) null).when(dLFileVersion0).getFileEntry();
      DLFileVersionWrapper dLFileVersionWrapper0 = new DLFileVersionWrapper(dLFileVersion0);
      LiferayFileVersion liferayFileVersion0 = new LiferayFileVersion(dLFileVersionWrapper0);
      FileEntry fileEntry0 = liferayFileVersion0.getFileEntry();
      IteratorClosureAdapter<Integer> iteratorClosureAdapter0 = new IteratorClosureAdapter<Integer>((Object) null);
      SwingBuilder swingBuilder0 = SwingBuilder.edtBuilder(iteratorClosureAdapter0);
      CompilerConfiguration compilerConfiguration0 = new CompilerConfiguration();
      GroovyShell groovyShell0 = new GroovyShell(swingBuilder0, compilerConfiguration0);
      GroovyClassLoader groovyClassLoader0 = groovyShell0.getClassLoader();
      FileEntryProxyBean fileEntryProxyBean0 = new FileEntryProxyBean(fileEntry0, groovyClassLoader0);
      Namespace namespace0 = Namespace.get("liferay/document_library_pdf_processor");
      NonLazyElement nonLazyElement0 = new NonLazyElement("/tmp/liferay/document_preview/", namespace0);
      ElementImpl elementImpl0 = new ElementImpl(nonLazyElement0);
      try { 
        pDFProcessorImpl0.doImportGeneratedFiles((PortletDataContext) null, fileEntryProxyBean0, fileEntry0, elementImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.documentlibrary.util.DLPreviewableProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DLFileVersion dLFileVersion0 = mock(DLFileVersion.class, new ViolatedAssumptionAnswer());
      DLFileVersion dLFileVersion1 = mock(DLFileVersion.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(dLFileVersion1).getExtension();
      doReturn(0L, 0L).when(dLFileVersion1).getFileVersionId();
      doReturn(dLFileVersion0).when(dLFileVersion1).toEscapedModel();
      DLFileVersionWrapper dLFileVersionWrapper0 = new DLFileVersionWrapper(dLFileVersion1);
      LiferayFileVersion liferayFileVersion0 = new LiferayFileVersion(dLFileVersionWrapper0, false);
      FileVersion fileVersion0 = liferayFileVersion0.toEscapedModel();
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      // Undeclared exception!
      try { 
        pDFProcessorImpl0.trigger(fileVersion0, liferayFileVersion0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      FileUtil fileUtil0 = new FileUtil();
      FileImpl fileImpl0 = FileImpl.getInstance();
      fileUtil0.setFile(fileImpl0);
      pDFProcessorImpl0.afterPropertiesSet();
      assertEquals(0, DLPreviewableProcessor.THUMBNAIL_INDEX_DEFAULT);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      boolean boolean0 = pDFProcessorImpl0.isDocumentSupported("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      boolean boolean0 = pDFProcessorImpl0.isDocumentSupported((FileVersion) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      String string0 = pDFProcessorImpl0.getThumbnailType((FileVersion) null);
      assertEquals("png", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      List<Long> list0 = pDFProcessorImpl0.getFileVersionIds();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      // Undeclared exception!
      try { 
        pDFProcessorImpl0.isDocumentSupported("document_preview/");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.liferay.portlet.documentlibrary.util.DocumentConversionUtil
         //
         verifyException("com.liferay.portlet.documentlibrary.util.PDFProcessorImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      DLFileVersion dLFileVersion0 = mock(DLFileVersion.class, new ViolatedAssumptionAnswer());
      doReturn("2(rZB").when(dLFileVersion0).getMimeType();
      DLFileVersionWrapper dLFileVersionWrapper0 = new DLFileVersionWrapper(dLFileVersion0);
      LiferayFileVersion liferayFileVersion0 = new LiferayFileVersion(dLFileVersionWrapper0, true);
      // Undeclared exception!
      try { 
        pDFProcessorImpl0.isDocumentSupported((FileVersion) liferayFileVersion0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.liferay.portlet.documentlibrary.util.DocumentConversionUtil
         //
         verifyException("com.liferay.portlet.documentlibrary.util.PDFProcessorImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      try { 
        pDFProcessorImpl0.importPreviews((PortletDataContext) null, (FileEntry) null, (FileEntry) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.documentlibrary.util.PDFProcessorImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      try { 
        pDFProcessorImpl0.hasPreview((FileVersion) null, "document_preview/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.documentlibrary.util.DLPreviewableProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      DLFileVersion dLFileVersion0 = mock(DLFileVersion.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(dLFileVersion0).getFileEntryId();
      doReturn(0L).when(dLFileVersion0).getFileVersionId();
      doReturn(0L).when(dLFileVersion0).getGroupId();
      DLFileVersionWrapper dLFileVersionWrapper0 = new DLFileVersionWrapper(dLFileVersion0);
      LiferayFileVersion liferayFileVersion0 = new LiferayFileVersion(dLFileVersionWrapper0);
      // Undeclared exception!
      try { 
        pDFProcessorImpl0.hasPreview(liferayFileVersion0, "(&/Nn)j;)3*67u=jJ");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.liferay.portlet.documentlibrary.util.DLUtil
         //
         verifyException("com.liferay.portlet.documentlibrary.util.DLPreviewableProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      DLFileVersion dLFileVersion0 = mock(DLFileVersion.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(dLFileVersion0).getFileEntryId();
      doReturn(0L).when(dLFileVersion0).getFileVersionId();
      doReturn(0L).when(dLFileVersion0).getGroupId();
      DLFileVersionWrapper dLFileVersionWrapper0 = new DLFileVersionWrapper(dLFileVersion0);
      LiferayFileVersion liferayFileVersion0 = new LiferayFileVersion(dLFileVersionWrapper0);
      // Undeclared exception!
      try { 
        pDFProcessorImpl0.hasPreview(liferayFileVersion0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.liferay.portlet.documentlibrary.util.DLUtil
         //
         verifyException("com.liferay.portlet.documentlibrary.util.DLPreviewableProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      // Undeclared exception!
      try { 
        pDFProcessorImpl0.hasImages((FileVersion) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.liferay.portal.util.PropsValues
         //
         verifyException("com.liferay.portlet.documentlibrary.util.PDFProcessorImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      try { 
        pDFProcessorImpl0.getThumbnailFileSize((FileVersion) null, (-1970241814));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.documentlibrary.util.DLPreviewableProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      try { 
        pDFProcessorImpl0.getThumbnailAsStream((FileVersion) null, 815);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.documentlibrary.util.DLPreviewableProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      try { 
        pDFProcessorImpl0.getPreviewFileSize((FileVersion) null, (-1995205759));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.documentlibrary.util.DLPreviewableProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      DLFileVersion dLFileVersion0 = mock(DLFileVersion.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(dLFileVersion0).getCompanyId();
      doReturn(0L).when(dLFileVersion0).getFileEntryId();
      doReturn(0L).when(dLFileVersion0).getFileVersionId();
      doReturn(0L).when(dLFileVersion0).getGroupId();
      DLFileVersionWrapper dLFileVersionWrapper0 = new DLFileVersionWrapper(dLFileVersion0);
      LiferayFileVersion liferayFileVersion0 = new LiferayFileVersion(dLFileVersionWrapper0);
      // Undeclared exception!
      try { 
        pDFProcessorImpl0.getPreviewFileCount(liferayFileVersion0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.liferay.portlet.documentlibrary.util.DLUtil
         //
         verifyException("com.liferay.portlet.documentlibrary.util.DLPreviewableProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      DLFileVersion dLFileVersion0 = mock(DLFileVersion.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(dLFileVersion0).getCompanyId();
      doReturn(0L).when(dLFileVersion0).getFileEntryId();
      doReturn(0L).when(dLFileVersion0).getFileVersionId();
      doReturn(0L).when(dLFileVersion0).getGroupId();
      DLFileVersionWrapper dLFileVersionWrapper0 = new DLFileVersionWrapper(dLFileVersion0);
      LiferayFileVersion liferayFileVersion0 = new LiferayFileVersion(dLFileVersionWrapper0);
      // Undeclared exception!
      try { 
        pDFProcessorImpl0.getPreviewAsStream(liferayFileVersion0, (-1956228007));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.liferay.portlet.documentlibrary.util.DLUtil
         //
         verifyException("com.liferay.portlet.documentlibrary.util.DLPreviewableProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      try { 
        pDFProcessorImpl0.generateImages((FileVersion) null, (FileVersion) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.documentlibrary.util.PDFProcessorImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      try { 
        pDFProcessorImpl0.exportPreviews((PortletDataContext) null, (FileEntry) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.documentlibrary.util.PDFProcessorImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      // Undeclared exception!
      try { 
        pDFProcessorImpl0.copyPreviews((FileVersion) null, (FileVersion) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.liferay.portal.util.PropsValues
         //
         verifyException("com.liferay.portlet.documentlibrary.util.PDFProcessorImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      boolean boolean0 = pDFProcessorImpl0.isSupported("application/x-pdf");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      boolean boolean0 = pDFProcessorImpl0.isSupported("application/pdf");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DLFileVersion dLFileVersion0 = mock(DLFileVersion.class, new ViolatedAssumptionAnswer());
      doReturn("jcommander.debug").when(dLFileVersion0).getExtension();
      doReturn(1L, 1L).when(dLFileVersion0).getFileVersionId();
      DLFileVersion dLFileVersion1 = mock(DLFileVersion.class, new ViolatedAssumptionAnswer());
      doReturn(dLFileVersion0).when(dLFileVersion1).toEscapedModel();
      DLFileVersionWrapper dLFileVersionWrapper0 = new DLFileVersionWrapper(dLFileVersion1);
      LiferayFileVersion liferayFileVersion0 = new LiferayFileVersion(dLFileVersionWrapper0, false);
      FileVersion fileVersion0 = liferayFileVersion0.toEscapedModel();
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      // Undeclared exception!
      try { 
        pDFProcessorImpl0.trigger(fileVersion0, fileVersion0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.liferay.portlet.documentlibrary.util.DocumentConversionUtil
         //
         verifyException("com.liferay.portlet.documentlibrary.util.PDFProcessorImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      DLFileVersion dLFileVersion0 = mock(DLFileVersion.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(dLFileVersion0).getFileVersionId();
      DLFileVersionWrapper dLFileVersionWrapper0 = new DLFileVersionWrapper(dLFileVersion0);
      LiferayFileVersion liferayFileVersion0 = new LiferayFileVersion(dLFileVersionWrapper0);
      // Undeclared exception!
      try { 
        pDFProcessorImpl0.generateImages((FileVersion) null, liferayFileVersion0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.liferay.portal.util.PropsValues
         //
         verifyException("com.liferay.portlet.documentlibrary.util.PDFProcessorImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      DOMElement dOMElement0 = new DOMElement("/tmp/liferay/document_preview/");
      ElementImpl elementImpl0 = new ElementImpl(dOMElement0);
      pDFProcessorImpl0.importPreviews((PortletDataContext) null, (FileEntry) null, (FileEntry) null, elementImpl0);
      assertEquals("", elementImpl0.getTextTrim());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      boolean boolean0 = pDFProcessorImpl0.isDocumentSupported("application/x-pdf");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      // Undeclared exception!
      try { 
        pDFProcessorImpl0.isSupported("_D-cv;");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.liferay.portlet.documentlibrary.util.DocumentConversionUtil
         //
         verifyException("com.liferay.portlet.documentlibrary.util.PDFProcessorImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      boolean boolean0 = pDFProcessorImpl0.isSupported("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      FileVersionProxyBean fileVersionProxyBean0 = new FileVersionProxyBean((FileVersion) null, classLoader0);
      try { 
        pDFProcessorImpl0.hasPreview(fileVersionProxyBean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.repository.proxy.FileVersionProxyBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      try { 
        pDFProcessorImpl0.getPreviewAsStream((FileVersion) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.documentlibrary.util.DLPreviewableProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      LiferayFileVersion liferayFileVersion0 = new LiferayFileVersion((DLFileVersion) null, true);
      // Undeclared exception!
      try { 
        pDFProcessorImpl0.isDocumentSupported((FileVersion) liferayFileVersion0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.repository.liferayrepository.model.LiferayFileVersion", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      try { 
        pDFProcessorImpl0.afterPropertiesSet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      FileVersionProxyBean fileVersionProxyBean0 = new FileVersionProxyBean((FileVersion) null, classLoader0);
      int int0 = pDFProcessorImpl0.getPreviewFileCount(fileVersionProxyBean0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      DLFileVersion dLFileVersion0 = mock(DLFileVersion.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(dLFileVersion0).getCompanyId();
      doReturn(0L).when(dLFileVersion0).getFileEntryId();
      doReturn(0L).when(dLFileVersion0).getFileVersionId();
      doReturn(0L).when(dLFileVersion0).getGroupId();
      DLFileVersionWrapper dLFileVersionWrapper0 = new DLFileVersionWrapper(dLFileVersion0);
      LiferayFileVersion liferayFileVersion0 = new LiferayFileVersion(dLFileVersionWrapper0);
      // Undeclared exception!
      try { 
        pDFProcessorImpl0.getThumbnailFileSize(liferayFileVersion0, 0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.liferay.portlet.documentlibrary.util.DLUtil
         //
         verifyException("com.liferay.portlet.documentlibrary.util.DLPreviewableProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      DLFileVersion dLFileVersion0 = mock(DLFileVersion.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(dLFileVersion0).getCompanyId();
      doReturn(0L).when(dLFileVersion0).getFileEntryId();
      doReturn(0L).when(dLFileVersion0).getFileVersionId();
      doReturn(0L).when(dLFileVersion0).getGroupId();
      DLFileVersionWrapper dLFileVersionWrapper0 = new DLFileVersionWrapper(dLFileVersion0);
      LiferayFileVersion liferayFileVersion0 = new LiferayFileVersion(dLFileVersionWrapper0);
      // Undeclared exception!
      try { 
        pDFProcessorImpl0.getPreviewFileSize(liferayFileVersion0, (-2098980843));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.liferay.portlet.documentlibrary.util.DLUtil
         //
         verifyException("com.liferay.portlet.documentlibrary.util.DLPreviewableProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      String string0 = pDFProcessorImpl0.getPreviewType((FileVersion) null);
      assertEquals("png", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      try { 
        pDFProcessorImpl0.doExportGeneratedFiles((PortletDataContext) null, (FileEntry) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portlet.documentlibrary.util.DLPreviewableProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PDFProcessorImpl pDFProcessorImpl0 = new PDFProcessorImpl();
      DLFileVersion dLFileVersion0 = mock(DLFileVersion.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(dLFileVersion0).getCompanyId();
      doReturn(0L).when(dLFileVersion0).getFileEntryId();
      doReturn(0L).when(dLFileVersion0).getFileVersionId();
      doReturn(0L).when(dLFileVersion0).getGroupId();
      DLFileVersionWrapper dLFileVersionWrapper0 = new DLFileVersionWrapper(dLFileVersion0);
      LiferayFileVersion liferayFileVersion0 = new LiferayFileVersion(dLFileVersionWrapper0, false);
      // Undeclared exception!
      try { 
        pDFProcessorImpl0.getThumbnailAsStream(liferayFileVersion0, 2049);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.liferay.portlet.documentlibrary.util.DLUtil
         //
         verifyException("com.liferay.portlet.documentlibrary.util.DLPreviewableProcessor", e);
      }
  }
}
