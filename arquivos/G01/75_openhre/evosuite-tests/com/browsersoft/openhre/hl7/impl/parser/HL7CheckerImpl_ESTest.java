/*
 * This file was automatically generated by EvoSuite
 * Thu May 07 08:37:51 GMT 2020
 */

package com.browsersoft.openhre.hl7.impl.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.browsersoft.openhre.hl7.api.config.HL7Configuration;
import com.browsersoft.openhre.hl7.api.config.HL7Segment;
import com.browsersoft.openhre.hl7.api.parse.HL7CheckerHandler;
import com.browsersoft.openhre.hl7.api.parse.HL7CheckerState;
import com.browsersoft.openhre.hl7.api.parse.HL7Parser;
import com.browsersoft.openhre.hl7.impl.config.HL7ConfigurationImpl;
import com.browsersoft.openhre.hl7.impl.config.HL7SegmentImpl;
import com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl;
import com.browsersoft.openhre.hl7.impl.parser.HL7CheckerStateImpl;
import com.browsersoft.openhre.hl7.impl.parser.HL7SAXEventGeneratorImpl;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HL7CheckerImpl_ESTest extends HL7CheckerImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.setState((HL7CheckerState) null);
      HL7CheckerState hL7CheckerState0 = hL7CheckerImpl0.getState();
      assertNull(hL7CheckerState0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setSeriousError(true);
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      HL7CheckerState hL7CheckerState0 = hL7CheckerImpl0.getState();
      assertEquals(0, hL7CheckerState0.getActualDataTypeSubPartsPossition());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7SegmentImpl hL7SegmentImpl0 = new HL7SegmentImpl();
      hL7CheckerImpl0.messageTracerSegmentEvent(hL7SegmentImpl0);
      hL7CheckerImpl0.emptyRepeateField();
      HL7CheckerState hL7CheckerState0 = hL7CheckerImpl0.getState();
      assertEquals(1, hL7CheckerState0.getActualFieldRepeatableIndex());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setActualFieldRepeatableIndex((-1));
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      HL7CheckerState hL7CheckerState0 = hL7CheckerImpl0.getState();
      assertEquals(0, hL7CheckerState0.getActualDataTypePartsPossition());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.addToActualFieldLength(2987);
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      HL7CheckerState hL7CheckerState0 = hL7CheckerImpl0.getState();
      assertEquals(0, hL7CheckerState0.getActualDataTypePartsPossition());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setActualDataTypeSubPartsPossition(4465);
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      HL7CheckerState hL7CheckerState0 = hL7CheckerImpl0.getState();
      assertEquals(0, hL7CheckerState0.getActualDataTypePartsPossition());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      hL7CheckerStateImpl0.setActualDataTypePartsPossition(1082);
      HL7CheckerState hL7CheckerState0 = hL7CheckerImpl0.getState();
      assertEquals(0, hL7CheckerState0.getActualFieldLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setActualDataTypePartsPossition((-2763));
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      HL7CheckerState hL7CheckerState0 = hL7CheckerImpl0.getState();
      assertSame(hL7CheckerState0, hL7CheckerStateImpl0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7SAXEventGeneratorImpl hL7SAXEventGeneratorImpl0 = new HL7SAXEventGeneratorImpl();
      hL7CheckerImpl0.setHandler(hL7SAXEventGeneratorImpl0);
      HL7CheckerHandler hL7CheckerHandler0 = hL7CheckerImpl0.getHandler();
      assertSame(hL7CheckerHandler0, hL7SAXEventGeneratorImpl0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7ConfigurationImpl hL7ConfigurationImpl0 = new HL7ConfigurationImpl();
      hL7CheckerImpl0.setConfiguration(hL7ConfigurationImpl0);
      HL7Configuration hL7Configuration0 = hL7CheckerImpl0.getConfiguration();
      assertSame(hL7Configuration0, hL7ConfigurationImpl0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      StringReader stringReader0 = new StringReader("S7}u");
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.readData(stringReader0, "S7}u");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.setState((HL7CheckerState) null);
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.messageTracerSegmentEvent((HL7Segment) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.setState((HL7CheckerState) null);
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.endField();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.setState((HL7CheckerState) null);
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.emptyRepeateField();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.setState((HL7CheckerState) null);
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.emptyField();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.controlEmptyRequired();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.setState((HL7CheckerState) null);
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.component("a)RJDv#L{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.setState((HL7CheckerState) null);
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.beginFieldRepeate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HL7SegmentImpl hL7SegmentImpl0 = new HL7SegmentImpl();
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.messageTracerSegmentEvent(hL7SegmentImpl0);
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.beginField();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.endOfRecord();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setSeriousError(true);
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      hL7CheckerImpl0.endOfRecord();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.subComponent("");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setSeriousError(true);
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      hL7CheckerImpl0.subComponent("org.apache.axis.encoding.DefaultTypeMappingImpl");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setSeriousError(true);
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      hL7CheckerImpl0.component("v2kh,W");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.component("");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setSeriousError(true);
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      hL7CheckerImpl0.endComponent();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.beginComponent();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setSeriousError(true);
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      hL7CheckerImpl0.beginComponent();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.emptyField();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setSeriousError(true);
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      hL7CheckerImpl0.emptyField();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setSeriousError(true);
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      hL7CheckerImpl0.emptyRepeateField();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.beginFieldRepeate();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setSeriousError(true);
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      hL7CheckerImpl0.beginFieldRepeate();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.endField();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setSeriousError(true);
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      hL7CheckerImpl0.endField();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.beginField();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setSeriousError(true);
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      hL7CheckerImpl0.beginField();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.endSegment();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setSeriousError(true);
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      hL7CheckerImpl0.endSegment();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.beginSegment("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerStateImpl hL7CheckerStateImpl0 = new HL7CheckerStateImpl();
      hL7CheckerStateImpl0.setSeriousError(true);
      hL7CheckerImpl0.setState(hL7CheckerStateImpl0);
      hL7CheckerImpl0.beginSegment("org.apache.axis.encoding.DefaultTypeMappingImpl");
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7ConfigurationImpl hL7ConfigurationImpl0 = new HL7ConfigurationImpl();
      hL7CheckerImpl0.setConfiguration(hL7ConfigurationImpl0);
      StringReader stringReader0 = new StringReader("FGq~>We57tQh`");
      try { 
        hL7CheckerImpl0.readData(stringReader0, "!zJ/K#slq]c9|oRp/");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7SegmentImpl hL7SegmentImpl0 = new HL7SegmentImpl();
      hL7CheckerImpl0.messageTracerSegmentEvent(hL7SegmentImpl0);
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.endSegment();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.messageTracerErrorEvent("nE@xJ!l{]s.`otkl@i");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.setState((HL7CheckerState) null);
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.beginComponent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7Parser hL7Parser0 = hL7CheckerImpl0.getParser();
      assertNotNull(hL7Parser0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.messageTracerAdditionalTagBeginEvent("org.apache.axis.encoding.DefaultTypeMappingImpl");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.subComponent("_k;3i23O5UR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.endComponent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7Configuration hL7Configuration0 = hL7CheckerImpl0.getConfiguration();
      assertNull(hL7Configuration0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      // Undeclared exception!
      try { 
        hL7CheckerImpl0.messageTracerAdditionalTagEndEvent("NAMESPACE_NODE");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.browsersoft.openhre.hl7.impl.parser.HL7CheckerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.setParser((HL7Parser) null);
      HL7Parser hL7Parser0 = hL7CheckerImpl0.getParser();
      assertNull(hL7Parser0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      HL7CheckerHandler hL7CheckerHandler0 = hL7CheckerImpl0.getHandler();
      assertNull(hL7CheckerHandler0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HL7SegmentImpl hL7SegmentImpl0 = new HL7SegmentImpl();
      HL7CheckerImpl hL7CheckerImpl0 = new HL7CheckerImpl();
      hL7CheckerImpl0.messageTracerSegmentEvent(hL7SegmentImpl0);
      hL7CheckerImpl0.component("&eh\"kwEs:z3Xr");
  }
}
