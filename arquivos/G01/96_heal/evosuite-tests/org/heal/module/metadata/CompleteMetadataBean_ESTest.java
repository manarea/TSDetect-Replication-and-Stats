/*
 * This file was automatically generated by EvoSuite
 * Thu May 07 08:27:39 GMT 2020
 */

package org.heal.module.metadata;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.heal.module.metadata.CompleteMetadataBean;
import org.heal.module.metadata.ContextURLBean;
import org.heal.module.metadata.ContributorBean;
import org.heal.module.metadata.CopyrightBean;
import org.heal.module.metadata.CopyrightHolderBean;
import org.heal.module.metadata.CopyrightTextBean;
import org.heal.module.metadata.DiseaseDiagnosisBean;
import org.heal.module.metadata.FormatBean;
import org.heal.module.metadata.KeywordBean;
import org.heal.module.metadata.MetadataBean;
import org.heal.module.metadata.RelationBean;
import org.heal.module.metadata.RequirementBean;
import org.heal.module.metadata.TargetUserGroupBean;
import org.heal.module.metadata.TaxonPathBean;
import org.junit.runner.RunWith;

 
public class CompleteMetadataBeanTest { 

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setTaxonPaths((ArrayList) null);
      ArrayList arrayList0 = completeMetadataBean0.getTaxonPaths();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) "");
      completeMetadataBean0.setTargetUserGroups(arrayList0);
      ArrayList arrayList1 = completeMetadataBean0.getTargetUserGroups();
      assertFalse(arrayList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setRequirements((ArrayList) null);
      ArrayList arrayList0 = completeMetadataBean0.getRequirements();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList<FormatBean> arrayList0 = new ArrayList<FormatBean>();
      FormatBean formatBean0 = new FormatBean();
      arrayList0.add(formatBean0);
      completeMetadataBean0.setRequirements(arrayList0);
      ArrayList arrayList1 = completeMetadataBean0.getRequirements();
      assertEquals(1, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setRelations((ArrayList) null);
      ArrayList arrayList0 = completeMetadataBean0.getRelations();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setMetametadataIdentifiers((List) null);
      List list0 = completeMetadataBean0.getMetametadataIdentifiers();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList<CopyrightBean> arrayList0 = new ArrayList<CopyrightBean>();
      CopyrightBean copyrightBean0 = new CopyrightBean();
      arrayList0.add(copyrightBean0);
      completeMetadataBean0.setCopyrights(arrayList0);
      ArrayList arrayList1 = completeMetadataBean0.getCopyrights();
      completeMetadataBean0.setMetametadataIdentifiers(arrayList1);
      List list0 = completeMetadataBean0.getMetametadataIdentifiers();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setMetametadataContributors((List) null);
      List list0 = completeMetadataBean0.getMetametadataContributors();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = new Integer(2772);
      arrayList0.add(integer0);
      completeMetadataBean0.setMetametadataContributors(arrayList0);
      List list0 = completeMetadataBean0.getMetametadataContributors();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      MockDate mockDate0 = new MockDate(2259, 1, 1, 289, 1);
      completeMetadataBean0.setRejectDate(mockDate0);
      MetadataBean metadataBean0 = completeMetadataBean0.getMetadata();
      assertNull(metadataBean0.getSourceCollectionId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setInappropriate(true);
      MetadataBean metadataBean0 = completeMetadataBean0.getMetadata();
      assertFalse(metadataBean0.isPrivate());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setPrivate(true);
      MetadataBean metadataBean0 = completeMetadataBean0.getMetadata();
      assertNull(metadataBean0.getFileSize());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      MockDate mockDate0 = new MockDate((-1298), (-1298), (-1298), (-1298), 0, (-1624));
      completeMetadataBean0.setCatalogDate(mockDate0);
      MetadataBean metadataBean0 = completeMetadataBean0.getMetadata();
      assertNull(metadataBean0.getOrientation());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setArchived(true);
      MetadataBean metadataBean0 = completeMetadataBean0.getMetadata();
      assertNull(metadataBean0.getInappropriate());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      MockDate mockDate0 = new MockDate(1L);
      completeMetadataBean0.setApproveDate(mockDate0);
      MetadataBean metadataBean0 = completeMetadataBean0.getMetadata();
      assertNull(metadataBean0.getSubmissionAgreement());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setAnnotated(true);
      MetadataBean metadataBean0 = completeMetadataBean0.getMetadata();
      assertSame(completeMetadataBean0, metadataBean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setKeywords((ArrayList) null);
      ArrayList arrayList0 = completeMetadataBean0.getKeywords();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setFormats((ArrayList) null);
      ArrayList arrayList0 = completeMetadataBean0.getFormats();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setFormat("");
      ArrayList arrayList0 = completeMetadataBean0.getFormats();
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setDiseaseDiagnoses((ArrayList) null);
      ArrayList arrayList0 = completeMetadataBean0.getDiseaseDiagnoses();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setCopyrights((ArrayList) null);
      ArrayList arrayList0 = completeMetadataBean0.getCopyrights();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      CopyrightBean copyrightBean0 = new CopyrightBean();
      completeMetadataBean0.addCopyright(copyrightBean0);
      ArrayList arrayList0 = completeMetadataBean0.getCopyrights();
      assertFalse(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setCopyrightHolders((ArrayList) null);
      ArrayList arrayList0 = completeMetadataBean0.getCopyrightHolders();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      CopyrightBean copyrightBean0 = new CopyrightBean();
      CopyrightTextBean copyrightTextBean0 = new CopyrightTextBean();
      copyrightTextBean0.setCopyrightText(" approveDate:");
      copyrightBean0.setCopyrightText(copyrightTextBean0);
      completeMetadataBean0.addCopyright(copyrightBean0);
      String string0 = completeMetadataBean0.getCopyright();
      assertEquals(" approveDate:", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList<CopyrightBean> arrayList0 = new ArrayList<CopyrightBean>();
      CopyrightBean copyrightBean0 = new CopyrightBean();
      CopyrightTextBean copyrightTextBean0 = new CopyrightTextBean();
      copyrightTextBean0.setCopyrightText("");
      copyrightBean0.setCopyrightText(copyrightTextBean0);
      arrayList0.add(copyrightBean0);
      completeMetadataBean0.setCopyrights(arrayList0);
      String string0 = completeMetadataBean0.getCopyright();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setContributors((TreeMap) null);
      TreeMap treeMap0 = completeMetadataBean0.getContributors();
      assertNull(treeMap0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      TreeMap<Object, Object> treeMap0 = new TreeMap<Object, Object>();
      treeMap0.put("+o NAaQ:ruw*TBL?I", "XA]\"Ul)nhXxGU");
      completeMetadataBean0.setContributors(treeMap0);
      TreeMap treeMap1 = completeMetadataBean0.getContributors();
      assertEquals(1, treeMap1.size());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setContextURLs((ArrayList) null);
      ArrayList arrayList0 = completeMetadataBean0.getContextURLs();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      TreeMap<Integer, Object> treeMap0 = new TreeMap<Integer, Object>();
      Integer integer0 = new Integer((-1796));
      treeMap0.put(integer0, completeMetadataBean0);
      completeMetadataBean0.setContributors(treeMap0);
      // Undeclared exception!
      try { 
        completeMetadataBean0.toString();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.heal.module.metadata.CompleteMetadataBean cannot be cast to java.util.ArrayList
         //
         verifyException("org.heal.module.metadata.CompleteMetadataBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      // Undeclared exception!
      try { 
        completeMetadataBean0.setMetadata((MetadataBean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.heal.module.metadata.CompleteMetadataBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add((String) null);
      // Undeclared exception!
      try { 
        completeMetadataBean0.setFormats(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.heal.module.metadata.CompleteMetadataBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = new Integer(2772);
      arrayList0.add(integer0);
      // Undeclared exception!
      try { 
        completeMetadataBean0.setFormats(arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to org.heal.module.metadata.FormatBean
         //
         verifyException("org.heal.module.metadata.CompleteMetadataBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add(".");
      completeMetadataBean0.setCopyrights(arrayList0);
      // Undeclared exception!
      try { 
        completeMetadataBean0.getCopyright();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.heal.module.metadata.CopyrightBean
         //
         verifyException("org.heal.module.metadata.CompleteMetadataBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      TreeMap<Integer, FormatBean> treeMap0 = new TreeMap<Integer, FormatBean>();
      Integer integer0 = new Integer((-3056));
      FormatBean formatBean0 = new FormatBean();
      treeMap0.put(integer0, formatBean0);
      completeMetadataBean0.setContributors(treeMap0);
      // Undeclared exception!
      try { 
        completeMetadataBean0.getContributorList();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.heal.module.metadata.FormatBean cannot be cast to java.util.Collection
         //
         verifyException("org.heal.module.metadata.CompleteMetadataBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setTaxonPaths((ArrayList) null);
      TaxonPathBean taxonPathBean0 = new TaxonPathBean();
      // Undeclared exception!
      try { 
        completeMetadataBean0.addTaxonPath(taxonPathBean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.heal.module.metadata.CompleteMetadataBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setRequirements((ArrayList) null);
      RequirementBean requirementBean0 = new RequirementBean();
      // Undeclared exception!
      try { 
        completeMetadataBean0.addRequirement(requirementBean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.heal.module.metadata.CompleteMetadataBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setKeywords((ArrayList) null);
      KeywordBean keywordBean0 = new KeywordBean();
      // Undeclared exception!
      try { 
        completeMetadataBean0.addKeyword(keywordBean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.heal.module.metadata.CompleteMetadataBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      // Undeclared exception!
      try { 
        completeMetadataBean0.addFormat((FormatBean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.heal.module.metadata.CompleteMetadataBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setDiseaseDiagnoses((ArrayList) null);
      DiseaseDiagnosisBean diseaseDiagnosisBean0 = new DiseaseDiagnosisBean();
      // Undeclared exception!
      try { 
        completeMetadataBean0.addDiseaseDiagnosis(diseaseDiagnosisBean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.heal.module.metadata.CompleteMetadataBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ContributorBean contributorBean0 = new ContributorBean();
      // Undeclared exception!
      try { 
        completeMetadataBean0.addContributor(contributorBean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setContextURLs((ArrayList) null);
      ContextURLBean contextURLBean0 = new ContextURLBean();
      // Undeclared exception!
      try { 
        completeMetadataBean0.addContextURL(contextURLBean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.heal.module.metadata.CompleteMetadataBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setFormats((ArrayList) null);
      String string0 = completeMetadataBean0.toString();
      assertEquals("Basic metadata:\nmetadataId: null\ntitle: null\ndescription: null\nlocation: null\ncontributeName: null\ncontributeUserId: null\nfileName: null\nfileExtension: null\nfileHeight: null\nfileWidth: null\nformat: null\nglobalId: null\nsourceCollection: null\nthumbnail: null\nsourcecollections: null\n\nExtended Metadata:  sourceCollectionId:null annotated:false inappropriate:false archived:false private:false specimenType:null radiographType:null orientation:null magnification:null clinicalHistory:null duration:null publicationId:null publicationName:null publicationDate:null approveDate:null catalogDate:null rejectDate:null creationDate:null languageType:null\nComplete Metadata: Disease Diagnoses: \nCopyrights: \nTaxonPaths: \nCopyrightHolders: \nContextURLs: \nrequirements: \nMetametadata Identifiers: \nMetametadata Contributors: \nrelations: \nkeywords: \nTargetUserGroups: \n", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ContributorBean contributorBean0 = new ContributorBean();
      contributorBean0.setRole("ContributorBean{contributorId='null', vCard='null', date=null, dateDescription='null', metadataId='null', role='null', version='null', status='null'}");
      completeMetadataBean0.addContributor(contributorBean0);
      String string0 = completeMetadataBean0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setContributors((TreeMap) null);
      String string0 = completeMetadataBean0.toString();
      assertEquals("Basic metadata:\nmetadataId: null\ntitle: null\ndescription: null\nlocation: null\ncontributeName: null\ncontributeUserId: null\nfileName: null\nfileExtension: null\nfileHeight: null\nfileWidth: null\nformat: null\nglobalId: null\nsourceCollection: null\nthumbnail: null\nsourcecollections: null\n\nExtended Metadata:  sourceCollectionId:null annotated:false inappropriate:false archived:false private:false specimenType:null radiographType:null orientation:null magnification:null clinicalHistory:null duration:null publicationId:null publicationName:null publicationDate:null approveDate:null catalogDate:null rejectDate:null creationDate:null languageType:null\nComplete Metadata: Disease Diagnoses: \nCopyrights: \nTaxonPaths: \nCopyrightHolders: \nContextURLs: \nrequirements: \nMetametadata Identifiers: \nMetametadata Contributors: \nrelations: \nkeywords: \nformats: \nTargetUserGroups: \n", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setRequirements((ArrayList) null);
      String string0 = completeMetadataBean0.toString();
      assertEquals("Basic metadata:\nmetadataId: null\ntitle: null\ndescription: null\nlocation: null\ncontributeName: null\ncontributeUserId: null\nfileName: null\nfileExtension: null\nfileHeight: null\nfileWidth: null\nformat: null\nglobalId: null\nsourceCollection: null\nthumbnail: null\nsourcecollections: null\n\nExtended Metadata:  sourceCollectionId:null annotated:false inappropriate:false archived:false private:false specimenType:null radiographType:null orientation:null magnification:null clinicalHistory:null duration:null publicationId:null publicationName:null publicationDate:null approveDate:null catalogDate:null rejectDate:null creationDate:null languageType:null\nComplete Metadata: Disease Diagnoses: \nCopyrights: \nTaxonPaths: \nCopyrightHolders: \nContextURLs: \nMetametadata Identifiers: \nMetametadata Contributors: \nrelations: \nkeywords: \nformats: \nTargetUserGroups: \n", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setCopyrightHolders((ArrayList) null);
      String string0 = completeMetadataBean0.toString();
      assertEquals("Basic metadata:\nmetadataId: null\ntitle: null\ndescription: null\nlocation: null\ncontributeName: null\ncontributeUserId: null\nfileName: null\nfileExtension: null\nfileHeight: null\nfileWidth: null\nformat: null\nglobalId: null\nsourceCollection: null\nthumbnail: null\nsourcecollections: null\n\nExtended Metadata:  sourceCollectionId:null annotated:false inappropriate:false archived:false private:false specimenType:null radiographType:null orientation:null magnification:null clinicalHistory:null duration:null publicationId:null publicationName:null publicationDate:null approveDate:null catalogDate:null rejectDate:null creationDate:null languageType:null\nComplete Metadata: Disease Diagnoses: \nCopyrights: \nTaxonPaths: \nContextURLs: \nrequirements: \nMetametadata Identifiers: \nMetametadata Contributors: \nrelations: \nkeywords: \nformats: \nTargetUserGroups: \n", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setCopyrights((ArrayList) null);
      String string0 = completeMetadataBean0.toString();
      assertEquals("Basic metadata:\nmetadataId: null\ntitle: null\ndescription: null\nlocation: null\ncontributeName: null\ncontributeUserId: null\nfileName: null\nfileExtension: null\nfileHeight: null\nfileWidth: null\nformat: null\nglobalId: null\nsourceCollection: null\nthumbnail: null\nsourcecollections: null\n\nExtended Metadata:  sourceCollectionId:null annotated:false inappropriate:false archived:false private:false specimenType:null radiographType:null orientation:null magnification:null clinicalHistory:null duration:null publicationId:null publicationName:null publicationDate:null approveDate:null catalogDate:null rejectDate:null creationDate:null languageType:null\nComplete Metadata: Disease Diagnoses: \nTaxonPaths: \nCopyrightHolders: \nContextURLs: \nrequirements: \nMetametadata Identifiers: \nMetametadata Contributors: \nrelations: \nkeywords: \nformats: \nTargetUserGroups: \n", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setDiseaseDiagnoses((ArrayList) null);
      String string0 = completeMetadataBean0.toString();
      assertEquals("Basic metadata:\nmetadataId: null\ntitle: null\ndescription: null\nlocation: null\ncontributeName: null\ncontributeUserId: null\nfileName: null\nfileExtension: null\nfileHeight: null\nfileWidth: null\nformat: null\nglobalId: null\nsourceCollection: null\nthumbnail: null\nsourcecollections: null\n\nExtended Metadata:  sourceCollectionId:null annotated:false inappropriate:false archived:false private:false specimenType:null radiographType:null orientation:null magnification:null clinicalHistory:null duration:null publicationId:null publicationName:null publicationDate:null approveDate:null catalogDate:null rejectDate:null creationDate:null languageType:null\nComplete Metadata: Copyrights: \nTaxonPaths: \nCopyrightHolders: \nContextURLs: \nrequirements: \nMetametadata Identifiers: \nMetametadata Contributors: \nrelations: \nkeywords: \nformats: \nTargetUserGroups: \n", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      FormatBean formatBean0 = new FormatBean();
      completeMetadataBean0.addFormat(formatBean0);
      completeMetadataBean0.addFormat(formatBean0);
      assertNull(completeMetadataBean0.getMagnification());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ContributorBean contributorBean0 = new ContributorBean();
      contributorBean0.setRole("");
      completeMetadataBean0.addContributor(contributorBean0);
      completeMetadataBean0.addContributor(contributorBean0);
      assertNull(completeMetadataBean0.getSourceCollectionId());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ContributorBean contributorBean0 = new ContributorBean();
      contributorBean0.setRole("ContributorBean{contributorId='null', vCard='null', date=null, dateDescription='null', metadataId='null', role='null', version='null', status='null'}");
      completeMetadataBean0.addContributor(contributorBean0);
      List list0 = completeMetadataBean0.getContributorList();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      List list0 = completeMetadataBean0.getContributorList();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      CopyrightBean copyrightBean0 = new CopyrightBean();
      CopyrightTextBean copyrightTextBean0 = new CopyrightTextBean();
      copyrightBean0.setCopyrightText(copyrightTextBean0);
      completeMetadataBean0.addCopyright(copyrightBean0);
      String string0 = completeMetadataBean0.getCopyright();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.addCopyright((CopyrightBean) null);
      String string0 = completeMetadataBean0.getCopyright();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      String string0 = completeMetadataBean0.getCopyright();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setTargetUserGroups((ArrayList) null);
      assertFalse(completeMetadataBean0.isRejected());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      DiseaseDiagnosisBean diseaseDiagnosisBean0 = new DiseaseDiagnosisBean();
      completeMetadataBean0.addDiseaseDiagnosis(diseaseDiagnosisBean0);
      ArrayList arrayList0 = completeMetadataBean0.getDiseaseDiagnoses();
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setMetadata(completeMetadataBean0);
      assertNull(completeMetadataBean0.getPublicationId());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.addRelation((RelationBean) null);
      String string0 = completeMetadataBean0.toString();
      assertEquals("Basic metadata:\nmetadataId: null\ntitle: null\ndescription: null\nlocation: null\ncontributeName: null\ncontributeUserId: null\nfileName: null\nfileExtension: null\nfileHeight: null\nfileWidth: null\nformat: null\nglobalId: null\nsourceCollection: null\nthumbnail: null\nsourcecollections: null\n\nExtended Metadata:  sourceCollectionId:null annotated:false inappropriate:false archived:false private:false specimenType:null radiographType:null orientation:null magnification:null clinicalHistory:null duration:null publicationId:null publicationName:null publicationDate:null approveDate:null catalogDate:null rejectDate:null creationDate:null languageType:null\nComplete Metadata: Disease Diagnoses: \nCopyrights: \nTaxonPaths: \nCopyrightHolders: \nContextURLs: \nrequirements: \nMetametadata Identifiers: \nMetametadata Contributors: \nrelations: \nNULL\nkeywords: \nformats: \nTargetUserGroups: \n", string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setMetametadataIdentifiers((List) null);
      String string0 = completeMetadataBean0.toString();
      assertEquals("Basic metadata:\nmetadataId: null\ntitle: null\ndescription: null\nlocation: null\ncontributeName: null\ncontributeUserId: null\nfileName: null\nfileExtension: null\nfileHeight: null\nfileWidth: null\nformat: null\nglobalId: null\nsourceCollection: null\nthumbnail: null\nsourcecollections: null\n\nExtended Metadata:  sourceCollectionId:null annotated:false inappropriate:false archived:false private:false specimenType:null radiographType:null orientation:null magnification:null clinicalHistory:null duration:null publicationId:null publicationName:null publicationDate:null approveDate:null catalogDate:null rejectDate:null creationDate:null languageType:null\nComplete Metadata: Disease Diagnoses: \nCopyrights: \nTaxonPaths: \nCopyrightHolders: \nContextURLs: \nrequirements: \nMetametadata Contributors: \nrelations: \nkeywords: \nformats: \nTargetUserGroups: \n", string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      KeywordBean keywordBean0 = new KeywordBean();
      completeMetadataBean0.addKeyword(keywordBean0);
      ArrayList arrayList0 = completeMetadataBean0.getKeywords();
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList arrayList0 = completeMetadataBean0.getTaxonPaths();
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList arrayList0 = completeMetadataBean0.getDiseaseDiagnoses();
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setMetametadataContributors((List) null);
      String string0 = completeMetadataBean0.toString();
      assertEquals("Basic metadata:\nmetadataId: null\ntitle: null\ndescription: null\nlocation: null\ncontributeName: null\ncontributeUserId: null\nfileName: null\nfileExtension: null\nfileHeight: null\nfileWidth: null\nformat: null\nglobalId: null\nsourceCollection: null\nthumbnail: null\nsourcecollections: null\n\nExtended Metadata:  sourceCollectionId:null annotated:false inappropriate:false archived:false private:false specimenType:null radiographType:null orientation:null magnification:null clinicalHistory:null duration:null publicationId:null publicationName:null publicationDate:null approveDate:null catalogDate:null rejectDate:null creationDate:null languageType:null\nComplete Metadata: Disease Diagnoses: \nCopyrights: \nTaxonPaths: \nCopyrightHolders: \nContextURLs: \nrequirements: \nMetametadata Identifiers: \nrelations: \nkeywords: \nformats: \nTargetUserGroups: \n", string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setCopyrights((ArrayList) null);
      String string0 = completeMetadataBean0.getCopyright();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      TargetUserGroupBean targetUserGroupBean0 = new TargetUserGroupBean();
      completeMetadataBean0.addTargetUserGroup(targetUserGroupBean0);
      assertNull(completeMetadataBean0.getSourceCollection());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.addTaxonPath((TaxonPathBean) null);
      ArrayList arrayList0 = completeMetadataBean0.getTaxonPaths();
      assertFalse(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList arrayList0 = completeMetadataBean0.getTargetUserGroups();
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList arrayList0 = completeMetadataBean0.getRequirements();
      completeMetadataBean0.setFormats(arrayList0);
      assertNull(completeMetadataBean0.getOrientation());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList arrayList0 = completeMetadataBean0.getContextURLs();
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      List list0 = completeMetadataBean0.getMetametadataIdentifiers();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList arrayList0 = completeMetadataBean0.getCopyrightHolders();
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList arrayList0 = completeMetadataBean0.getCopyrights();
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setTaxonPaths((ArrayList) null);
      String string0 = completeMetadataBean0.toString();
      assertEquals("Basic metadata:\nmetadataId: null\ntitle: null\ndescription: null\nlocation: null\ncontributeName: null\ncontributeUserId: null\nfileName: null\nfileExtension: null\nfileHeight: null\nfileWidth: null\nformat: null\nglobalId: null\nsourceCollection: null\nthumbnail: null\nsourcecollections: null\n\nExtended Metadata:  sourceCollectionId:null annotated:false inappropriate:false archived:false private:false specimenType:null radiographType:null orientation:null magnification:null clinicalHistory:null duration:null publicationId:null publicationName:null publicationDate:null approveDate:null catalogDate:null rejectDate:null creationDate:null languageType:null\nComplete Metadata: Disease Diagnoses: \nCopyrights: \nCopyrightHolders: \nContextURLs: \nrequirements: \nMetametadata Identifiers: \nMetametadata Contributors: \nrelations: \nkeywords: \nformats: \nTargetUserGroups: \n", string0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      List list0 = completeMetadataBean0.getMetametadataContributors();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setCopyrightHolders((ArrayList) null);
      CopyrightHolderBean copyrightHolderBean0 = new CopyrightHolderBean();
      // Undeclared exception!
      try { 
        completeMetadataBean0.addCopyrightHolder(copyrightHolderBean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.heal.module.metadata.CompleteMetadataBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ContextURLBean contextURLBean0 = new ContextURLBean();
      completeMetadataBean0.addContextURL(contextURLBean0);
      ArrayList arrayList0 = completeMetadataBean0.getContextURLs();
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      CopyrightHolderBean copyrightHolderBean0 = new CopyrightHolderBean();
      completeMetadataBean0.addCopyrightHolder(copyrightHolderBean0);
      ArrayList arrayList0 = completeMetadataBean0.getCopyrightHolders();
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList arrayList0 = completeMetadataBean0.getFormats();
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList arrayList0 = completeMetadataBean0.getKeywords();
      completeMetadataBean0.setRequirements(arrayList0);
      assertFalse(completeMetadataBean0.isCataloged());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      RequirementBean requirementBean0 = new RequirementBean();
      completeMetadataBean0.addRequirement(requirementBean0);
      assertNull(completeMetadataBean0.getGlobalId());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setContributors((TreeMap) null);
      // Undeclared exception!
      try { 
        completeMetadataBean0.getContributorList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.heal.module.metadata.CompleteMetadataBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      CopyrightBean copyrightBean0 = new CopyrightBean();
      completeMetadataBean0.addCopyright(copyrightBean0);
      String string0 = completeMetadataBean0.getCopyright();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setKeywords((ArrayList) null);
      String string0 = completeMetadataBean0.toString();
      assertEquals("Basic metadata:\nmetadataId: null\ntitle: null\ndescription: null\nlocation: null\ncontributeName: null\ncontributeUserId: null\nfileName: null\nfileExtension: null\nfileHeight: null\nfileWidth: null\nformat: null\nglobalId: null\nsourceCollection: null\nthumbnail: null\nsourcecollections: null\n\nExtended Metadata:  sourceCollectionId:null annotated:false inappropriate:false archived:false private:false specimenType:null radiographType:null orientation:null magnification:null clinicalHistory:null duration:null publicationId:null publicationName:null publicationDate:null approveDate:null catalogDate:null rejectDate:null creationDate:null languageType:null\nComplete Metadata: Disease Diagnoses: \nCopyrights: \nTaxonPaths: \nCopyrightHolders: \nContextURLs: \nrequirements: \nMetametadata Identifiers: \nMetametadata Contributors: \nrelations: \nformats: \nTargetUserGroups: \n", string0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      TreeMap treeMap0 = completeMetadataBean0.getContributors();
      assertEquals(0, treeMap0.size());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setContextURLs((ArrayList) null);
      String string0 = completeMetadataBean0.toString();
      assertEquals("Basic metadata:\nmetadataId: null\ntitle: null\ndescription: null\nlocation: null\ncontributeName: null\ncontributeUserId: null\nfileName: null\nfileExtension: null\nfileHeight: null\nfileWidth: null\nformat: null\nglobalId: null\nsourceCollection: null\nthumbnail: null\nsourcecollections: null\n\nExtended Metadata:  sourceCollectionId:null annotated:false inappropriate:false archived:false private:false specimenType:null radiographType:null orientation:null magnification:null clinicalHistory:null duration:null publicationId:null publicationName:null publicationDate:null approveDate:null catalogDate:null rejectDate:null creationDate:null languageType:null\nComplete Metadata: Disease Diagnoses: \nCopyrights: \nTaxonPaths: \nCopyrightHolders: \nrequirements: \nMetametadata Identifiers: \nMetametadata Contributors: \nrelations: \nkeywords: \nformats: \nTargetUserGroups: \n", string0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      ArrayList arrayList0 = completeMetadataBean0.getRelations();
      completeMetadataBean0.setFormats(arrayList0);
      FormatBean formatBean0 = new FormatBean();
      completeMetadataBean0.addFormat(formatBean0);
      ArrayList arrayList1 = completeMetadataBean0.getRelations();
      assertFalse(arrayList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      CompleteMetadataBean completeMetadataBean0 = new CompleteMetadataBean();
      completeMetadataBean0.setRelations((ArrayList) null);
      String string0 = completeMetadataBean0.toString();
      assertEquals("Basic metadata:\nmetadataId: null\ntitle: null\ndescription: null\nlocation: null\ncontributeName: null\ncontributeUserId: null\nfileName: null\nfileExtension: null\nfileHeight: null\nfileWidth: null\nformat: null\nglobalId: null\nsourceCollection: null\nthumbnail: null\nsourcecollections: null\n\nExtended Metadata:  sourceCollectionId:null annotated:false inappropriate:false archived:false private:false specimenType:null radiographType:null orientation:null magnification:null clinicalHistory:null duration:null publicationId:null publicationName:null publicationDate:null approveDate:null catalogDate:null rejectDate:null creationDate:null languageType:null\nComplete Metadata: Disease Diagnoses: \nCopyrights: \nTaxonPaths: \nCopyrightHolders: \nContextURLs: \nrequirements: \nMetametadata Identifiers: \nMetametadata Contributors: \nkeywords: \nformats: \nTargetUserGroups: \n", string0);
  }
}
