/*
 * This file was automatically generated by EvoSuite
 * Thu May 07 09:18:43 GMT 2020
 */

package com.eteks.sweethome3d.viewcontroller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.Home;
import com.eteks.sweethome3d.model.UserPreferences;
import com.eteks.sweethome3d.swing.SwingViewFactory;
import com.eteks.sweethome3d.viewcontroller.ContentManager;
import com.eteks.sweethome3d.viewcontroller.PhotoController;
import com.eteks.sweethome3d.viewcontroller.View;
import com.eteks.sweethome3d.viewcontroller.ViewFactory;
import javax.swing.plaf.basic.BasicRootPaneUI;
import javax.swing.table.DefaultTableColumnModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PhotoController_ESTest extends PhotoController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.setQuality((-1));
      assertEquals((-1), photoController0.getQuality());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.set3DViewAspectRatio((-2699.83F));
      photoController0.setHeight((-2147483646));
      assertEquals((-2699.83F), photoController0.get3DViewAspectRatio(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      photoController0.setAspectRatio(aspectRatio0);
      photoController0.setWidth((-567));
      assertEquals((-567), photoController0.getWidth());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.updateProperties();
      assertEquals(1.0F, photoController0.get3DViewAspectRatio(), 0.01F);
      assertEquals(1392409281320L, photoController0.getTime());
      assertEquals(400, photoController0.getWidth());
      assertEquals(13684944, photoController0.getCeilingLightColor());
      assertEquals(0, photoController0.getQuality());
      assertEquals(300, photoController0.getHeight());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.setTime((-845L));
      long long0 = photoController0.getTime();
      assertEquals((-845L), long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.setQuality(2342);
      int int0 = photoController0.getQuality();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.setHeight((-1));
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      photoController0.setLens(camera_Lens0);
      int int0 = photoController0.getHeight();
      assertEquals(AspectRatio.RATIO_2_1, photoController0.getAspectRatio());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.setHeight((-2147483629));
      int int0 = photoController0.getHeight();
      assertEquals((-2147483629), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.setCeilingLightColor((-4242));
      int int0 = photoController0.getCeilingLightColor();
      assertEquals((-4242), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      photoController0.set3DViewAspectRatio((-1792.3F));
      float float0 = photoController0.get3DViewAspectRatio();
      assertEquals((-1792.3F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = null;
      try {
        photoController0 = new PhotoController((Home) null, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.viewcontroller.PhotoController", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.setCeilingLightColor(8540);
      photoController0.setCeilingLightColor(8540);
      assertEquals(8540, photoController0.getCeilingLightColor());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      assertEquals(AspectRatio.VIEW_3D_RATIO, photoController0.getAspectRatio());
      
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      photoController0.setLens(camera_Lens0);
      assertEquals(0, photoController0.getQuality());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      photoController0.setLens(camera_Lens0);
      assertEquals(300, photoController0.getHeight());
      assertEquals(13684944, photoController0.getCeilingLightColor());
      assertEquals(1.0F, photoController0.get3DViewAspectRatio(), 0.01F);
      assertEquals(1392409281320L, photoController0.getTime());
      assertEquals(400, photoController0.getWidth());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      photoController0.setLens(camera_Lens0);
      assertEquals(0, photoController0.getQuality());
      assertEquals(300, photoController0.getHeight());
      assertEquals(400, photoController0.getWidth());
      assertEquals(1.0F, photoController0.get3DViewAspectRatio(), 0.01F);
      assertEquals(1392409281320L, photoController0.getTime());
      assertEquals(13684944, photoController0.getCeilingLightColor());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.setTime(3700L);
      photoController0.setTime(3700L);
      assertEquals(3700L, photoController0.getTime());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.setQuality(0);
      assertEquals(1392409281320L, photoController0.getTime());
      assertEquals(1.0F, photoController0.get3DViewAspectRatio(), 0.01F);
      assertEquals(400, photoController0.getWidth());
      assertEquals(13684944, photoController0.getCeilingLightColor());
      assertEquals(0, photoController0.getQuality());
      assertEquals(300, photoController0.getHeight());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Home home0 = new Home();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, (ViewFactory) null, (ContentManager) null);
      // Undeclared exception!
      try { 
        photoController0.getView();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.viewcontroller.PhotoController", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.set3DViewAspectRatio(Float.POSITIVE_INFINITY);
      assertEquals(Float.POSITIVE_INFINITY, photoController0.get3DViewAspectRatio(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      photoController0.setAspectRatio(aspectRatio0);
      photoController0.set3DViewAspectRatio(Float.POSITIVE_INFINITY);
      assertEquals(Float.POSITIVE_INFINITY, photoController0.get3DViewAspectRatio(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.set3DViewAspectRatio(1.0F);
      assertEquals(0, photoController0.getQuality());
      assertEquals(300, photoController0.getHeight());
      assertEquals(400, photoController0.getWidth());
      assertEquals(13684944, photoController0.getCeilingLightColor());
      assertEquals(1392409281320L, photoController0.getTime());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(2026, 3700L, 3700L, 2026, 3700L, 2026, 3700L, camera_Lens0);
      home0.setCamera(camera0);
      assertEquals(3700L, camera0.getTime());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      assertEquals(AspectRatio.VIEW_3D_RATIO, photoController0.getAspectRatio());
      
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      photoController0.setLens(camera_Lens0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      photoController0.setAspectRatio(aspectRatio0);
      assertEquals(200, photoController0.getHeight());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      photoController0.setAspectRatio(aspectRatio0);
      photoController0.setHeight(94025);
      assertEquals(94025, photoController0.getHeight());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      photoController0.setAspectRatio(aspectRatio0);
      photoController0.setHeight(586);
      assertEquals(586, photoController0.getHeight());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      photoController0.setAspectRatio(aspectRatio0);
      photoController0.setWidth(Integer.MAX_VALUE);
      assertEquals(Integer.MAX_VALUE, photoController0.getWidth());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      float float0 = photoController0.get3DViewAspectRatio();
      assertEquals(0, photoController0.getQuality());
      assertEquals(1392409281320L, photoController0.getTime());
      assertEquals(13684944, photoController0.getCeilingLightColor());
      assertEquals(400, photoController0.getWidth());
      assertEquals(1.0F, float0, 0.01F);
      assertEquals(300, photoController0.getHeight());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.getContentManager();
      assertEquals(13684944, photoController0.getCeilingLightColor());
      assertEquals(300, photoController0.getHeight());
      assertEquals(0, photoController0.getQuality());
      assertEquals(400, photoController0.getWidth());
      assertEquals(1392409281320L, photoController0.getTime());
      assertEquals(1.0F, photoController0.get3DViewAspectRatio(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      int int0 = photoController0.getQuality();
      assertEquals(1.0F, photoController0.get3DViewAspectRatio(), 0.01F);
      assertEquals(1392409281320L, photoController0.getTime());
      assertEquals(400, photoController0.getWidth());
      assertEquals(0, int0);
      assertEquals(13684944, photoController0.getCeilingLightColor());
      assertEquals(300, photoController0.getHeight());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.setVisualProperty("com.lowagie.text.pdf.PdfGraphics2D", (Object) null);
      assertEquals(0, photoController0.getQuality());
      assertEquals(400, photoController0.getWidth());
      assertEquals(1.0F, photoController0.get3DViewAspectRatio(), 0.01F);
      assertEquals(1392409281320L, photoController0.getTime());
      assertEquals(300, photoController0.getHeight());
      assertEquals(13684944, photoController0.getCeilingLightColor());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.getLens();
      assertEquals(13684944, photoController0.getCeilingLightColor());
      assertEquals(400, photoController0.getWidth());
      assertEquals(0, photoController0.getQuality());
      assertEquals(300, photoController0.getHeight());
      assertEquals(1392409281320L, photoController0.getTime());
      assertEquals(1.0F, photoController0.get3DViewAspectRatio(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.getAspectRatio();
      assertEquals(13684944, photoController0.getCeilingLightColor());
      assertEquals(400, photoController0.getWidth());
      assertEquals(1.0F, photoController0.get3DViewAspectRatio(), 0.01F);
      assertEquals(1392409281320L, photoController0.getTime());
      assertEquals(300, photoController0.getHeight());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      int int0 = photoController0.getCeilingLightColor();
      assertEquals(300, photoController0.getHeight());
      assertEquals(1392409281320L, photoController0.getTime());
      assertEquals(1.0F, photoController0.get3DViewAspectRatio(), 0.01F);
      assertEquals(0, photoController0.getQuality());
      assertEquals(400, photoController0.getWidth());
      assertEquals(13684944, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      int int0 = photoController0.getQualityLevelCount();
      assertEquals(400, photoController0.getWidth());
      assertEquals(1.0F, photoController0.get3DViewAspectRatio(), 0.01F);
      assertEquals(4, int0);
      assertEquals(1392409281320L, photoController0.getTime());
      assertEquals(300, photoController0.getHeight());
      assertEquals(13684944, photoController0.getCeilingLightColor());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      PhotoController.Property photoController_Property0 = PhotoController.Property.LENS;
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      photoController0.addPropertyChangeListener(photoController_Property0, defaultTableColumnModel0);
      assertEquals(1.0F, photoController0.get3DViewAspectRatio(), 0.01F);
      assertEquals(1392409281320L, photoController0.getTime());
      assertEquals(300, photoController0.getHeight());
      assertEquals(0, photoController0.getQuality());
      assertEquals(400, photoController0.getWidth());
      assertEquals(13684944, photoController0.getCeilingLightColor());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      // Undeclared exception!
      try { 
        photoController0.displayView((View) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.swing.SwingTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      long long0 = photoController0.getTime();
      assertEquals(13684944, photoController0.getCeilingLightColor());
      assertEquals(400, photoController0.getWidth());
      assertEquals(1392409281320L, long0);
      assertEquals(0, photoController0.getQuality());
      assertEquals(300, photoController0.getHeight());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      int int0 = photoController0.getWidth();
      assertEquals(1392409281320L, photoController0.getTime());
      assertEquals(1.0F, photoController0.get3DViewAspectRatio(), 0.01F);
      assertEquals(13684944, photoController0.getCeilingLightColor());
      assertEquals(300, photoController0.getHeight());
      assertEquals(400, int0);
      assertEquals(0, photoController0.getQuality());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      PhotoController.Property photoController_Property0 = PhotoController.Property.QUALITY;
      BasicRootPaneUI basicRootPaneUI0 = new BasicRootPaneUI();
      photoController0.removePropertyChangeListener(photoController_Property0, basicRootPaneUI0);
      assertEquals(0, photoController0.getQuality());
      assertEquals(300, photoController0.getHeight());
      assertEquals(400, photoController0.getWidth());
      assertEquals(13684944, photoController0.getCeilingLightColor());
      assertEquals(1392409281320L, photoController0.getTime());
      assertEquals(1.0F, photoController0.get3DViewAspectRatio(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      int int0 = photoController0.getHeight();
      assertEquals(13684944, photoController0.getCeilingLightColor());
      assertEquals(400, photoController0.getWidth());
      assertEquals(0, photoController0.getQuality());
      assertEquals(300, int0);
      assertEquals(1.0F, photoController0.get3DViewAspectRatio(), 0.01F);
      assertEquals(1392409281320L, photoController0.getTime());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.setWidth((-1268));
      int int0 = photoController0.getWidth();
      assertEquals((-1268), int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Home home0 = new Home();
      SwingViewFactory swingViewFactory0 = new SwingViewFactory();
      PhotoController photoController0 = new PhotoController(home0, (UserPreferences) null, (View) null, swingViewFactory0, (ContentManager) null);
      photoController0.get3DView();
      assertEquals(13684944, photoController0.getCeilingLightColor());
      assertEquals(400, photoController0.getWidth());
      assertEquals(300, photoController0.getHeight());
      assertEquals(1392409281320L, photoController0.getTime());
      assertEquals(1.0F, photoController0.get3DViewAspectRatio(), 0.01F);
  }
}
