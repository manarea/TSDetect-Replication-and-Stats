/*
 * This file was automatically generated by EvoSuite
 * Sun May 10 18:25:04 GMT 2020
 */

package de.huxhorn.lilith.consumers;

import org.junit.Test;
import static org.junit.Assert.*;
import de.huxhorn.lilith.consumers.AlarmSoundLoggingEventConsumer;
import de.huxhorn.lilith.data.eventsource.EventIdentifier;
import de.huxhorn.lilith.data.eventsource.EventWrapper;
import de.huxhorn.lilith.data.logging.LoggingEvent;
import de.huxhorn.sulky.sounds.Sounds;
import de.huxhorn.sulky.sounds.jlayer.JLayerSounds;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AlarmSoundLoggingEventConsumer_ESTest extends AlarmSoundLoggingEventConsumer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AlarmSoundLoggingEventConsumer alarmSoundLoggingEventConsumer0 = new AlarmSoundLoggingEventConsumer();
      JLayerSounds jLayerSounds0 = new JLayerSounds();
      alarmSoundLoggingEventConsumer0.setSounds(jLayerSounds0);
      LinkedList<EventWrapper<LoggingEvent>> linkedList0 = new LinkedList<EventWrapper<LoggingEvent>>();
      EventIdentifier eventIdentifier0 = new EventIdentifier();
      EventWrapper<LoggingEvent> eventWrapper0 = new EventWrapper<LoggingEvent>(eventIdentifier0, (LoggingEvent) null);
      linkedList0.add(eventWrapper0);
      alarmSoundLoggingEventConsumer0.consume(linkedList0);
      assertTrue(linkedList0.contains(eventWrapper0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AlarmSoundLoggingEventConsumer alarmSoundLoggingEventConsumer0 = new AlarmSoundLoggingEventConsumer();
      Sounds sounds0 = alarmSoundLoggingEventConsumer0.getSounds();
      assertNull(sounds0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AlarmSoundLoggingEventConsumer alarmSoundLoggingEventConsumer0 = new AlarmSoundLoggingEventConsumer();
      LinkedList<EventWrapper<LoggingEvent>> linkedList0 = new LinkedList<EventWrapper<LoggingEvent>>();
      alarmSoundLoggingEventConsumer0.consume(linkedList0);
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AlarmSoundLoggingEventConsumer alarmSoundLoggingEventConsumer0 = new AlarmSoundLoggingEventConsumer();
      LinkedList<EventWrapper<LoggingEvent>> linkedList0 = new LinkedList<EventWrapper<LoggingEvent>>();
      EventIdentifier eventIdentifier0 = new EventIdentifier();
      LoggingEvent loggingEvent0 = new LoggingEvent();
      EventWrapper<LoggingEvent> eventWrapper0 = new EventWrapper<LoggingEvent>(eventIdentifier0, loggingEvent0);
      linkedList0.add(eventWrapper0);
      JLayerSounds jLayerSounds0 = new JLayerSounds();
      alarmSoundLoggingEventConsumer0.setSounds(jLayerSounds0);
      alarmSoundLoggingEventConsumer0.consume(linkedList0);
      assertEquals(1, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AlarmSoundLoggingEventConsumer alarmSoundLoggingEventConsumer0 = new AlarmSoundLoggingEventConsumer();
      LinkedList<EventWrapper<LoggingEvent>> linkedList0 = new LinkedList<EventWrapper<LoggingEvent>>();
      EventIdentifier eventIdentifier0 = new EventIdentifier();
      LoggingEvent loggingEvent0 = new LoggingEvent();
      EventWrapper<LoggingEvent> eventWrapper0 = new EventWrapper<LoggingEvent>(eventIdentifier0, loggingEvent0);
      LoggingEvent.Level loggingEvent_Level0 = LoggingEvent.Level.ERROR;
      loggingEvent0.setLevel(loggingEvent_Level0);
      linkedList0.add(eventWrapper0);
      JLayerSounds jLayerSounds0 = new JLayerSounds();
      alarmSoundLoggingEventConsumer0.setSounds(jLayerSounds0);
      alarmSoundLoggingEventConsumer0.consume(linkedList0);
      assertTrue(linkedList0.contains(eventWrapper0));
  }
}
