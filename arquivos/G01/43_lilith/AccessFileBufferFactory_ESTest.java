/*
 * This file was automatically generated by EvoSuite
 * Thu May 07 08:56:34 GMT 2020
 */

package de.huxhorn.lilith.engine;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.huxhorn.lilith.data.access.AccessEvent;
import de.huxhorn.lilith.data.eventsource.EventWrapper;
import de.huxhorn.lilith.engine.AccessFileBufferFactory;
import de.huxhorn.lilith.engine.LogFileFactory;
import de.huxhorn.sulky.codec.Codec;
import de.huxhorn.sulky.codec.filebuffer.MetaData;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

 
public class AccessFileBufferFactoryTest { 

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("compression", "GZIP");
      hashMap0.put("contentFormat", "protobuf");
      MetaData metaData0 = new MetaData(hashMap0);
      AccessFileBufferFactory accessFileBufferFactory0 = new AccessFileBufferFactory((LogFileFactory) null, hashMap0);
      Codec<EventWrapper<AccessEvent>> codec0 = accessFileBufferFactory0.resolveCodec(metaData0);
      assertNotNull(codec0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("contentFormat", "protobuf");
      MetaData metaData0 = new MetaData(hashMap0);
      AccessFileBufferFactory accessFileBufferFactory0 = new AccessFileBufferFactory((LogFileFactory) null, hashMap0);
      Codec<EventWrapper<AccessEvent>> codec0 = accessFileBufferFactory0.resolveCodec(metaData0);
      assertNotNull(codec0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("compression", "GZIP");
      MetaData metaData0 = new MetaData(hashMap0);
      AccessFileBufferFactory accessFileBufferFactory0 = new AccessFileBufferFactory((LogFileFactory) null, hashMap0);
      // Undeclared exception!
      try { 
        accessFileBufferFactory0.resolveCodec(metaData0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown content format null!
         //
         verifyException("de.huxhorn.lilith.engine.AccessFileBufferFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AccessFileBufferFactory accessFileBufferFactory0 = new AccessFileBufferFactory((LogFileFactory) null, (Map<String, String>) null);
      // Undeclared exception!
      try { 
        accessFileBufferFactory0.resolveCodec((MetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown content format null!
         //
         verifyException("de.huxhorn.lilith.engine.AccessFileBufferFactory", e);
      }
  }
}
