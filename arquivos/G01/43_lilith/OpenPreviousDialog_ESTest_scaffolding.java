/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu May 07 08:36:57 GMT 2020
 */

package de.huxhorn.lilith.swing;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class OpenPreviousDialog_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "de.huxhorn.lilith.swing.OpenPreviousDialog"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.home", "/home/ubuntu"); 
    java.lang.System.setProperty("user.dir", "/home/test-smell/generation-scripts/projects/43_lilith"); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(OpenPreviousDialog_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.commons.io.LineIterator",
      "de.huxhorn.lilith.swing.preferences.TroubleshootingPanel",
      "de.huxhorn.sulky.tasks.Task",
      "de.huxhorn.lilith.swing.ViewContainerFrame",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$OpenAction",
      "de.huxhorn.lilith.data.eventsource.SourceIdentifier",
      "de.huxhorn.lilith.swing.preferences.SourceListsPanel",
      "de.huxhorn.sulky.conditions.Condition",
      "de.huxhorn.lilith.swing.ViewActions$RemoveInactiveAction",
      "de.huxhorn.lilith.swing.EventWrapperViewPanel",
      "de.huxhorn.lilith.swing.preferences.SourcesPanel",
      "de.huxhorn.lilith.engine.AccessFileBufferFactory",
      "de.huxhorn.lilith.swing.ViewManager",
      "de.huxhorn.sulky.sounds.jlayer.JLayerSounds$1",
      "de.huxhorn.sulky.conditions.BooleanValues",
      "org.xhtmlrenderer.extend.NamespaceHandler",
      "de.huxhorn.sulky.codec.filebuffer.DataStrategy",
      "de.huxhorn.sulky.codec.filebuffer.MetaDataEncoder",
      "de.huxhorn.sulky.codec.DelegatingCodecBase",
      "de.huxhorn.lilith.engine.EventSource",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$TabChangeListener",
      "com.google.protobuf.InvalidProtocolBufferException",
      "de.huxhorn.sulky.codec.Decoder",
      "de.huxhorn.lilith.swing.ViewActions$MinimizeAllOtherAction",
      "org.apache.commons.io.output.ByteArrayOutputStream",
      "de.huxhorn.lilith.data.logging.ThrowableInfo",
      "de.huxhorn.lilith.swing.SplashScreen",
      "org.xhtmlrenderer.extend.UserInterface",
      "org.apache.commons.io.IOUtils",
      "de.huxhorn.sulky.tasks.TaskManager",
      "de.huxhorn.lilith.swing.ViewContainerInternalFrame",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$OpenPreviousPanel",
      "de.huxhorn.lilith.swing.ViewContainer",
      "de.huxhorn.lilith.swing.TabbedLoggingViewContainer",
      "de.huxhorn.sulky.codec.filebuffer.MetaData",
      "de.huxhorn.lilith.swing.AboutPanel",
      "de.huxhorn.lilith.data.logging.LoggerContext",
      "de.huxhorn.sulky.buffers.FileBuffer",
      "de.huxhorn.sulky.buffers.AppendOperation",
      "de.huxhorn.sulky.sounds.jlayer.JLayerSounds",
      "de.huxhorn.lilith.swing.ViewActions",
      "de.huxhorn.lilith.swing.SplashScreen$ImagePanel",
      "de.huxhorn.lilith.swing.HelpFrame",
      "de.huxhorn.sulky.codec.filebuffer.DefaultIndexStrategy",
      "de.huxhorn.lilith.data.eventsource.EventIdentifier",
      "de.huxhorn.lilith.data.logging.protobuf.LoggingEventWrapperProtobufCodec",
      "de.huxhorn.lilith.data.logging.LoggingEvent$Level",
      "org.xhtmlrenderer.swing.FSMouseListener",
      "de.huxhorn.lilith.swing.table.ColorScheme",
      "de.huxhorn.lilith.engine.EventSourceProducer",
      "de.huxhorn.lilith.swing.StatisticsDialog",
      "org.xhtmlrenderer.swing.BasicPanel",
      "de.huxhorn.sulky.sounds.jlayer.JLayerSounds$PlayRunnable",
      "de.huxhorn.lilith.swing.preferences.ConditionsPanel",
      "org.objectweb.asm.Opcodes",
      "de.huxhorn.lilith.engine.FileBufferFactory",
      "de.huxhorn.lilith.data.access.HttpStatus",
      "de.huxhorn.lilith.swing.MainFrame",
      "de.huxhorn.sulky.codec.filebuffer.FileHeaderStrategy",
      "de.huxhorn.lilith.swing.ApplicationPreferences$1",
      "de.huxhorn.lilith.swing.TabbedAccessViewContainer",
      "de.huxhorn.lilith.data.eventsource.TransferSizeInfo",
      "de.huxhorn.lilith.swing.preferences.PreferencesDialog",
      "de.huxhorn.lilith.swing.ViewActions$PreferencesMenuAction",
      "de.huxhorn.lilith.swing.statistics.StatisticsPanel",
      "de.huxhorn.lilith.swing.filefilters.LilithFileFilter",
      "de.huxhorn.lilith.services.gotosrc.GoToSourceService",
      "org.xhtmlrenderer.simple.FSScrollPane",
      "de.huxhorn.lilith.swing.taskmanager.TaskManagerPanel",
      "de.huxhorn.lilith.swing.ViewActions$CloseAllOtherAction",
      "de.huxhorn.lilith.data.eventsource.EventWrapper",
      "javazoom.jl.decoder.BitstreamException",
      "de.huxhorn.lilith.engine.LogFileFactory",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$OpenPreviousPanel$SecondaryMouseListener",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$CancelAction",
      "de.huxhorn.lilith.swing.preferences.SoundsPanel",
      "de.huxhorn.lilith.data.logging.LoggingEvent",
      "de.huxhorn.lilith.swing.ApplicationPreferences",
      "de.huxhorn.sulky.tasks.TaskListener",
      "org.simplericity.macify.eawt.ApplicationListener",
      "javazoom.jl.decoder.BitstreamErrors",
      "de.huxhorn.sulky.codec.Encoder",
      "de.huxhorn.sulky.buffers.ResetOperation",
      "org.xhtmlrenderer.simple.XHTMLPanel",
      "org.xhtmlrenderer.swing.RootPanel",
      "de.huxhorn.lilith.data.access.protobuf.AccessEventWrapperProtobufCodec",
      "de.huxhorn.lilith.data.logging.ThreadInfo",
      "de.huxhorn.lilith.swing.AccessEventViewManager",
      "de.huxhorn.sulky.swing.KeyStrokes",
      "de.huxhorn.lilith.swing.filefilters.GroovyConditionFileFilter",
      "de.huxhorn.lilith.swing.table.Colors",
      "de.huxhorn.sulky.codec.Codec",
      "de.huxhorn.lilith.data.logging.protobuf.CompressingLoggingEventWrapperProtobufCodec",
      "de.huxhorn.lilith.swing.AboutDialog",
      "de.huxhorn.lilith.swing.ViewActions$MinimizeAllAction",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$OpenPreviousPanel$SecondaryListSelectionListener",
      "de.huxhorn.lilith.swing.ProgressGlassPane",
      "de.huxhorn.lilith.swing.taskmanager.TaskManagerInternalFrame",
      "de.huxhorn.sulky.codec.filebuffer.FileHeader",
      "de.huxhorn.lilith.engine.SourceManager",
      "de.huxhorn.lilith.swing.LicenseAgreementDialog",
      "de.huxhorn.lilith.swing.preferences.SavedCondition",
      "de.huxhorn.lilith.swing.preferences.SourceFilteringPanel",
      "de.huxhorn.lilith.data.logging.Marker",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$1",
      "javazoom.jl.player.Player",
      "org.simplericity.macify.eawt.Application",
      "org.apache.commons.cli.ParseException",
      "de.huxhorn.sulky.codec.filebuffer.MetaDataDecoder",
      "de.huxhorn.lilith.appender.InternalLilithAppender",
      "de.huxhorn.sulky.swing.MemoryStatus",
      "de.huxhorn.lilith.swing.ViewActions$CloseAllAction",
      "de.huxhorn.lilith.LilithBuffer",
      "de.huxhorn.sulky.buffers.BlockingCircularBuffer",
      "de.huxhorn.lilith.swing.MainFrame$ImportType",
      "de.huxhorn.lilith.swing.preferences.StartupShutdownPanel",
      "javazoom.jl.decoder.JavaLayerException",
      "de.huxhorn.sulky.codec.filebuffer.IndexStrategy",
      "de.huxhorn.lilith.engine.LoggingFileBufferFactory",
      "de.huxhorn.lilith.data.access.protobuf.CompressingAccessEventWrapperProtobufCodec",
      "org.simplericity.macify.eawt.ApplicationEvent",
      "org.apache.commons.cli.Options",
      "de.huxhorn.lilith.swing.OpenPreviousDialog",
      "de.huxhorn.sulky.sounds.Sounds",
      "de.huxhorn.sulky.codec.filebuffer.CodecFileBuffer",
      "de.huxhorn.lilith.swing.filefilters.XmlImportFileFilter",
      "de.huxhorn.lilith.swing.LoggingViewState",
      "de.huxhorn.sulky.buffers.RemoveOperation",
      "de.huxhorn.lilith.swing.debug.DebugDialog",
      "de.huxhorn.sulky.buffers.DisposeOperation",
      "de.huxhorn.sulky.codec.filebuffer.MetaDataCodec",
      "javazoom.jl.decoder.JavaLayerErrors",
      "de.huxhorn.lilith.engine.EventSourceListener",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$EventType",
      "org.apache.commons.cli.CommandLine",
      "de.huxhorn.lilith.data.logging.Message",
      "de.huxhorn.lilith.swing.TabbedPaneViewContainer",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$OpenPreviousPanel$PrimaryListSelectionListener",
      "de.huxhorn.sulky.buffers.CircularBuffer",
      "de.huxhorn.sulky.buffers.Buffer",
      "org.apache.commons.cli.CommandLineParser",
      "de.huxhorn.lilith.handler.Slf4JHandler",
      "de.huxhorn.lilith.swing.ApplicationPreferences$SourceFiltering",
      "de.huxhorn.lilith.swing.LoggingEventViewManager",
      "org.xhtmlrenderer.simple.extend.FormSubmissionListener",
      "de.huxhorn.sulky.tasks.TaskManager$State",
      "de.huxhorn.lilith.swing.ViewWindow",
      "de.huxhorn.lilith.swing.preferences.GeneralPanel",
      "de.huxhorn.lilith.data.logging.ExtendedStackTraceElement",
      "de.huxhorn.lilith.Lilith",
      "de.huxhorn.sulky.codec.filebuffer.DefaultFileHeaderStrategy",
      "de.huxhorn.sulky.buffers.SetOperation",
      "de.huxhorn.lilith.engine.EventProducer",
      "de.huxhorn.lilith.swing.ApplicationPreferences$EnumPersistenceDelegate",
      "de.huxhorn.lilith.data.access.HttpStatus$Type",
      "de.huxhorn.lilith.engine.impl.LogFileFactoryImpl"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(OpenPreviousDialog_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "de.huxhorn.lilith.swing.OpenPreviousDialog",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$OpenAction",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$CancelAction",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$OpenPreviousPanel",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$OpenPreviousPanel$PrimaryListSelectionListener",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$OpenPreviousPanel$SecondaryListSelectionListener",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$OpenPreviousPanel$SecondaryMouseListener",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$EventType",
      "de.huxhorn.lilith.swing.OpenPreviousDialog$TabChangeListener",
      "de.huxhorn.sulky.swing.KeyStrokes",
      "de.huxhorn.lilith.data.logging.LoggingEvent$Level",
      "de.huxhorn.lilith.swing.table.ColorScheme",
      "de.huxhorn.lilith.data.access.HttpStatus$Type",
      "de.huxhorn.lilith.swing.ApplicationPreferences",
      "de.huxhorn.lilith.swing.SplashScreen",
      "de.huxhorn.lilith.swing.MainFrame",
      "org.apache.commons.io.IOUtils",
      "de.huxhorn.lilith.swing.ApplicationPreferences$SourceFiltering",
      "de.huxhorn.lilith.swing.ApplicationPreferences$EnumPersistenceDelegate",
      "de.huxhorn.sulky.sounds.jlayer.JLayerSounds",
      "de.huxhorn.sulky.sounds.jlayer.JLayerSounds$PlayRunnable",
      "de.huxhorn.lilith.data.eventsource.SourceIdentifier",
      "de.huxhorn.lilith.engine.impl.LogFileFactoryImpl",
      "de.huxhorn.lilith.engine.FileBufferFactory",
      "de.huxhorn.lilith.engine.LoggingFileBufferFactory",
      "de.huxhorn.sulky.codec.filebuffer.CodecFileBuffer",
      "de.huxhorn.sulky.codec.filebuffer.DefaultFileHeaderStrategy",
      "de.huxhorn.sulky.codec.DelegatingCodecBase",
      "de.huxhorn.sulky.codec.filebuffer.MetaDataCodec",
      "de.huxhorn.sulky.codec.filebuffer.MetaDataEncoder",
      "de.huxhorn.sulky.codec.filebuffer.MetaDataDecoder",
      "de.huxhorn.sulky.codec.filebuffer.DefaultIndexStrategy",
      "de.huxhorn.lilith.appender.InternalLilithAppender",
      "de.huxhorn.lilith.Lilith",
      "de.huxhorn.lilith.swing.ApplicationPreferences$1",
      "de.huxhorn.lilith.swing.filefilters.GroovyConditionFileFilter",
      "org.objectweb.asm.Opcodes",
      "de.huxhorn.sulky.conditions.BooleanValues"
    );
  }
}
